# -*- coding: utf8 -*-

import copy
import datetime
import re
import uuid

from distutils.version import LooseVersion

from sqlalchemy import (
    or_ as sa_or,
    and_ as sa_and
)

from app.exceptions import ApiError
from app.services.send_voip_push import send_voip_push
from app.wrappers import client_token_required
from .ABSHandler import *
from utils.login_util import *

from app.models import Action, Subscriber
from app.services import (
	get_need_update_app,
	get_subscriber_contract_data,
)
from app.texts import _t

from app_models import (
    HTTPLog, DeviceData,
    Client, ClientToken
)
from app_sbtelecom.api import sbTelecomApi
from app_sbtelecom.connectors import sbTelecomConnector
from app_sbtelecom.models import SbtHuaweiPassword, SbtApiReg
from app_payment.models import AutoPay, AutoPup
from app_utils.alarm_utils import get_alarm_bot
from app_utils.wrappers import memorizing
from methods_simple import get_reg_op

from settings import SBT_BASE_TARIFF_PDF, TEST_SBT_USERS

from app_regions.services import (
    is_full_sbt_client,
    is_wifi_available_for_client,
    get_region_manager_info,
    get_region_support_info,
)


# CHAT_ENABLED_MSISDNS = set([
#     '9581234567', '9581111111',
#     "9687905573", "9057777156", "9857540081", "9251702780", "9194110011", "9852288069", "9955009901", "9585931911", "9585931913", "9957774969", "9779987777", "9100022600", "9853456666", "9031769875", "9689305374", "9652861166", "9267302361", "9269387026", "9250950002", "9032166952", "9774506771", "9585940007", "9585931252", "9957772728", "9585931311", "9585942125", "9957770213", "9957077707", "9957001019", "9164215405", "9585933373", "9585942031", "9585931001", "9585940177", "9585940073", "9585931333", "9585940075", "9585939836", "9585939886", "9585931307", "9585942436",
#     "9957001241", "9957791941", "9957773746", "9969991955", "9300016368", "9957789981", "9966996973", "9957001091", "9957773353", "9957786146", "9957773181", "9957773626", "9957774293", "9957773432", "9957773849", "9957773895", "9957773210", "9957773034", "9957774430", "9957001026", "9957790017", "9585936670", "9969990906", "9957774549", "9957774320", "9957001029", "9957772755", "9957773060", "9957787187", "9957774356", "9957774575", "9957774481", "9957772812", "9957774207", "9957775069", "9957773547", "9957774025", "9957774644", "9957773245", "9957773306", "9957772936", "9957774005", "9957773390", "9957773065", "9969993317", "9957773722", "9957773979", "9300042295", "9957774809", "9957772984",
#     "9585932622", "9957773460", "9957774595", "9957774673", "9957773172", "9957773557", "9957772838", "9957774269", "9957785749", "9957773714", "9957795808", "9957773436", "9957773788", "9957774912", "9957773408", "9957773231", "9957773288", "9966991565", "9957774286", "9957773503", "9957774743", "9957774517", "9585933888", "9957794420", "9957773724", "9957774417", "9957773314", "9300012330", "9957774768", "9957773734", "9957774551", "9957774047", "9957773069", "9957775022", "9957773850", "9957001056", "9957773410", "9957773168", "9957773272", "9957001096", "9957773423", "9957773806", "9585934282", "9957773741", "9957773283", "9957773705", "9957799626", "9957772740", "9957774795", "9957773179", "9957775001", "9957774306", "9957772839", "9957773994", "9957784047", "9957774543", "9300028359", "9957001271", "9957775027", "9957772724", "9957774833", "9957785774", "9957772695", "9957773301", "9300011824", "9957773040", "9957774890", "9957774053", "9957772712", "9957773668", "9966997023", "9957774189", "9957774692", "9957773584", "9957774389", "9957773384", "9957774842", "9957774054", "9957773363", "9957773023", "9957774201", "9957774461", "9966996402", "9957773836", "9957773397", "9957774216", "9957773373", "9957772659", "9957774941", "9957774822", "9957774587", "9957774617", "9957773409", "9957772947", "9957774859", "9300044549", "9957774227", "9957773170", "9957773537", "9957773766",
#     "9957001241", "9957791941", "9957773746", "9969991955", "9300016368", "9957789981", "9966996973", "9957001091", "9957773353", "9957786146", "9957773181", "9957773626", "9957774293", "9957773432", "9957773849", "9957773895", "9957773210", "9957773034", "9957774430", "9957001026", "9957790017", "9585936670", "9969990906", "9957774549", "9957774320", "9957001029", "9957772755", "9957773060", "9957787187", "9957774356", "9957774575", "9957774481", "9957772812", "9957774207", "9957775069", "9957773547", "9957774025", "9957774644", "9957773245", "9957773306", "9957772936", "9957774005", "9957773390", "9957773065", "9969993317", "9957773722", "9957773979", "9300042295", "9957774809", "9957772984", "9585932622", "9957773460", "9957774595", "9957774673", "9957773172", "9957773557", "9957772838", "9957774269", "9957785749", "9957773714", "9957795808", "9957773436", "9957773788", "9957774912", "9957773408", "9957773231", "9957773288", "9966991565", "9957774286", "9957773503", "9957774743", "9957774517", "9585933888", "9957794420", "9957773724", "9957774417", "9957773314", "9300012330", "9957774768", "9957773734", "9957774551", "9957774047", "9957773069", "9957775022", "9957773850", "9957001056", "9957773410", "9957773168", "9957773272", "9957001096", "9957773423", "9957773806", "9585934282", "9957773741", "9957773283", "9957773705", "9957799626", "9957772740", "9957774795", "9957773179", "9957775001", "9957774306", "9957772839", "9957773994", "9957784047", "9957774543", "9300028359", "9957001271", "9957775027", "9957772724", "9957774833", "9957785774", "9957772695", "9957773301", "9300011824", "9957773040", "9957774890", "9957774053", "9957772712", "9957773668", "9966997023", "9957774189", "9957774692", "9957773584", "9957774389", "9957773384", "9957774842", "9957774054", "9957773363", "9957773023", "9957774201", "9957774461", "9966996402", "9957773836", "9957773397", "9957774216", "9957773373", "9957772659", "9957774941", "9957774822", "9957774587", "9957774617", "9957773409", "9957772947", "9957774859", "9300044549", "9957774227", "9957773170", "9957773537", "9957773766", "9957774723", "9957774514", "9957774898", "9957773780", "9585932781", "9957773698", "9300017437", "9957773706", "9957784367", "9966996369", "9957774167", "9957774969", "9957781893", "9957774681", "9300011814", "9957772807", "9300010480", "9957773544", "9957772909", "9957774181", "9957001035", "9585936380", "9957773175", "9957774945", "9957774487", "9585938087", "9957785259", "9957782428", "9300043915", "9957790262", "9957773658", "9957772934", "9957001020", "9957774158", "9585939398", "9957773071", "9957798060", "9957774874", "9957772995", "9957774078", "9957774602", "9957774076", "9957772873", "9957772991", "9300040439", "9957773799", "9957773671", "9957774529", "9957773609", "9957773563", "9957799647", "9957772811", "9957799079", "9957773873", "9969997336", "9957772968", "9957773381", "9957773032", "9957774961", "9957773491", "9957773654", "9957773992", "9957772945", "9957790355", "9957774808", "9969993151", "9957774064", "9957774225", "9957772802", "9957774101", "9966992510", "9957773401", "9957773970", "9957772859", "9957774938", "9966996609", "9957772714", "9957795631", "9957781161", "9957774412", "9957786178", "9957773755", "9957773601", "9957773660", "9957774191", "9957785187", "9957774106", "9957773375", "9957794064", "9957773079", "9957001094", "9957773002", "9585935240", "9957774285", "9585933624", "9957773124", "9957773802", "9957772882", "9585938554", "9957773571", "9585937364", "9957773203", "9957773623", "9957773256", "9957773703", "9957773562", "9957773309", "9957773662", "9957774235", "9966991835", "9957773398", "9957772832", "9957795135", "9957773081", "9957775008", "9585936043", "9585939411", "9957798010", "9957794244", "9957773669", "9957772766", "9957774271", "9957774454", "9957774690", "9966991126", "9957774716", "9957792282", "9957773347", "9957774740", "9957773559", "9957773009", "9957775061", "9957773649", "9957796858", "9957792126", "9957772803", "9957772841", "9300012312", "9957774315", "9957774873", "9957780936", "9957774434", "9957774325", "9957001219", "9957775042", "9300041765", "9957790709", "9957773064", "9585936619", "9957773916", "9957773216", "9957774955", "9957774152", "9957772953", "9957774002", "9957774229", "9957772869", "9300012311", "9957773964", "9957773316", "9957774722", "9957773564", "9957773928", "9957773731", "9957774591", "9957774885", "9957772709", "9957773142", "9957774069", "9300015229", "9957772894", "9957774007", "9957773162", "9957773033", "9957774127", "9957774841", "9957773236", "9957773715", "9957773374", "9957795324", "9957773012", "9966997803", "9957773437", "9957774503", "9957775040", "9957774918", "9957772763", "9957774721", "9957774476", "9585939941", "9957773982", "9957773447", "9300041077", "9957772963", "9957773987", "9957773370", "9957772810", "9957774027", "9300019595", "9957773194", "9957772970", "9957774554", "9957773356", "9957773354", "9957772922", "9957774542", "9957773656", "9957773946", "9957772820", "9957772702", "9957774330", "9957773704", "9957772892", "9585935199", "9957774997", "9957001042", "9957774267", "9957773043", "9957789025", "9957774712", "9957796421", "9957773765", "9957787528", "9585936650", "9957773229", "9957772871", "9957772781", "9957773439", "9957773969", "9957773059", "9957789495", "9957773135", "9957001208", "9957774726", "9957774121", "9957774484", "9300017412", "9957772938", "9957773551", "9957774522", "9969992985", "9957773379", "9957773130", "9957773790", "9957773525", "9957789951", "9957775072", "9957772944", "9957773556", "9957774135", "9957773885", "9957774016", "9300036435", "9957795506", "9300019500", "9585934633", "9957772745", "9957773990", "9300019397", "9957773930", "9300013191", "9585938646", "9300044485", "9957773904", "9585939614", "9957772732", "9957773685", "9957790072", "9957774606", "9957774614", "9585936722", "9957774307", "9300018799", "9957772744", "9957774870", "9957775035", "9957774561", "9957774619", "9957773684", "9957774458", "9957773689", "9966991121", "9957774847", "9957783986", "9957790226", "9957001207", "9300019520", "9957774088", "9957773784", "9957001284", "9957775066", "9957774066", "9300017743", "9957772948", "9957774604", "9585939413", "9300041794", "9957772800", "9957773484", "9957774728", "9957796320", "9957773349", "9957786699", "9957001041", "9957794726", "9966996893", "9957774165", "9585935786", "9957772667", "9957795228", "9957772930", "9957772966", "9957774379", "9957789603", "9585936630", "9585937636", "9957772962", "9957001242", "9957772760", "9957001021", "9957773031", "9957798430", "9957774116", "9957774057", "9585936638", "9300013430", "9957774404", "9957774375", "9957773068", "9957794877", "9300042285", "9957774685", "9957773115", "9300044147", "9957774075", "9957773534", "9957798602", "9585933320", "9811427041", "9957774013", "9957774130", "9966994470", "9957773856", "9585935731", "9957774383", "9957773991", "9957773207", "9957001080", "9957772950", "9957773507", "9957799487", "9957786135", "9957795194", "9119460342", "9957772879", "9957773099", "9300012772", "9957773407", "9957773159", "9957773513", "9957773637", "9957774702", "9957774344", "9957774160", "9966995096", "9957774627", "9300036412", "9957773167", "9957794459", "9957773543", "9957781510", "9957773929", "9957775033", "9957773287", "9957773616", "9957774668", "9957774094", "9969995545", "9957774371", "9957772895", "9957774804", "9957772901", "9957786446", "9957774700", "9957773269", "9957774911", "9300016950", "9957773026", "9957774236", "9957774629", "9957773313", "9957772974", "9957790338", "9957781850", "9957790585", "9957774935", "9957773848", "9300013334", "9957774824", "9957773592", "9957774115", "9957775062", "9957773404", "9585933531", "9957774174", "9957772900", "9957773500", "9957774469", "9957773171", "9957774725", "9966996842", "9957775014", "9957774956", "9957773451", "9957774569", "9957774861", "9957774615", "9957773896", "9957774586", "9957772918", "9957774862", "9585936501", "9957774649", "9300044146", "9966996815",
#     "9585931333", "9957772949", "9957773456", "9957774806", "9957773154", "9957794204", "9585933202", "9957773924", "9957773116", "9957773450", "9300013507", "9957774391", "9957794641", "9957772971", "9957775012", "9957774645", "9957774091", "9957774459", "9957774689", "9957773362", "9957774394", "9957774943", "9957772960", "9957773752", "9957773212", "9957773156", "9957775067", "9957774169", "9957799586", "9957774789", "9300044104", "9957773474", "9957774182", "9966992405", "9300028052", "9300027874", "9300028453", "9957773610", "9957774855", "9957773527", "9957788282", "9957773769", "9957774548", "9957773140", "9957001273", "9957001240", "9957774558", "9957774622", "9957772992", "9957772750", "9957773494", "9957775041", "9957773176", "9300016766", "9957773957", "9957774661", "9957773750", "9957773418", "9957772933", "9957773795", "9957774288", "9957773947", "9957772967", "9957773093", "9300041744", "9957794297", "9957774576", "9957001088", "9957774254", "9957775032", "9957773403", "9957774714", "9957774048", "9300017402", "9957773376", "9957001090", "9957775036", "9957001206", "9957774820", "9957774468", "9957773619", "9957774565", "9957773576", "9957773809", "9957794414", "9957773481", "9957774786", "9957796422", "9957773580", "9957773067", "9957773726", "9300012241", "9300017440", "9957773554", "9957773842", "9957773275", "9957774756", "9957774502", "9957774913", "9585936709", "9957773195", "9957774623", "9957774205", "9957773004", "9957774001", "9957773164", "9957773044", "9957001027", "9957774471", "9957774828", "9957774161", "9300013383", "9957772893", "9957774658", "9957774093", "9957774984", "9957001068", "9957773606", "9957001095", "9957775011", "9969998914", "9957774378", "9957774380", "9957772985", "9957772849", "9957793707", "9957774818", "9957773898", "9969993758", "9957774340", "9957774703", "9957772865", "9957774962", "9585936659", "9957773622", "9957774465", "9300015490", "9300040700", "9957774750", "9957773278", "9957774103", "9957773914", "9300041068", "9957787210", "9300040094", "9957001246", "9957773920", "9957774531", "9957774528", "9957772903", "9957773631", "9957789388", "9957774373", "9957772990", "9957772924", "9300012323", "9957001237", "9957782539", "9957787427", "9957772916", "9957773153", "9957774206", "9957774593", "9957773304", "9300014095", "9957774553", "9957773803", "9957775049", "9957774930", "9957775068", "9957774203", "9957774485", "9966996643", "9957775043", "9957773674", "9957795230", "9957774974", "9957774252", "9957774460", "9957774350", "9957773160", "9585932988", "9957773294", "9957774287", "9957774735", "9957773590", "9957773190", "9957773120", "9969990396", "9957773276", "9957773329", "9957774504", "9957790192", "9957772733", "9585931299", "9957773084", "9957774100", "9957774530", "9957774133", "9957773155", "9957774657", "9957773647", "9957772780", "9957001024", "9957773248", "9300043808", "9957774937", "9957774992", "9957773427", "9957774825", "9957772959", "9300013939", "9957773526", "9957773063", "9957773082", "9957773634", "9957773324", "9966993261", "9957774667", "9957774276", "9969997395", "9957774162", "9957799648", "9957773184", "9957774489", "9957774291", "9957773536", "9957773524", "9957773913", "9957773960", "9957774535", "9957774794", "9957787748", "9957774342", "9957773038", "9300015280", "9957774473", "9966996737", "9957773709", "9957774914", "9957773675", "9957774421", "9957773818", "9957773058", "9957773123", "9957774246", "9957774349", "9957773371", "9957774068", "9957773695", "9957773006", "9957774493", "9957774803", "9957774435", "9957784357", "9957774474", "9957774613", "9957772801", "9957772884", "9957774196", "9957773639", "9957774662", "9300017405", "9957001243", "9957774574", "9957773975", "9957773267", "9957773297", "9957774220", "9957772876", "9966997024", "9957787996", "9957772819", "9957774099", "9957773217", "9957773655", "9957795730", "9957774950", "9957001235", "9957773086", "9957773588", "9957774171", "9957774208", "9957773753", "9957774360", "9957774497", "9957773528", "9957798859", "9957773965", "9957773676", "9300010041", "9957773680", "9957772874", "9957772956", "9957794874", "9957773862", "9957772951", "9957772988", "9957774240", "9957773640", "9957773485", "9957773532", "9957774247", "9957773607", "9585938709", "9957773215", "9957774035", "9957774817", "9300016825", "9957774581", "9957773147", "9957773539", "9957774562", "9957001227", "9957774031", "9957773411", "9957772736", "9957773021", "9957773228", "9957774583", "9300016216", "9966997026", "9957773091", "9957774924", "9957791391", "9957772994", "9300044114", "9957793541", "9957795605", "9957786677", "9957774719", "9957773020", "9957773394", "9957772886", "9957773735", "9957772964", "9969990343", "9957773385", "9957001098", "9957773625", "9957772808", "9957772989", "9957773083", "9957790768", "9957774753", "9300042799", "9957773473", "9957773738", "9300017436", "9957772739", "9957773488", "9957794252", "9585936657", "9957773319", "9957773265", "9957773104", "9957774687", "9957773292", "9957774738", "9957773972", "9300018412", "9957773305", "9585936781", "9957774335", "9957773279", "9957774546", "9957774351", "9585939373", "9957791849", "9957773224", "9969998807", "9585933277", "9966997671", "9957773567", "9957774273", "9966996553", "9957774798", "9957773189", "9957001247", "9957798095", "9957773692", "9957774975", "9957773520", "9957773602", "9957773953", "9966990646", "9957774544", "9957773041", "9300012380", "9957773699", "9957774456", "9957772825", "9585933859", "9957772912", "9957773927", "9957772864", "9957773036", "9957773998", "9957773469", "9957773759", "9957772955", "9957789292", "9957774226", "9957774660", "9957773870", "9957786666", "9957772917", "9957773442", "9957773414", "9957775031", "9957001051", "9957772725", "9957788478", "9300019530", "9957774654", "9957772772", "9957774395", "9957774802", "9957773901", "9957774813", "9957001046", "9957773578", "9957774388", "9957791575", "9957774625", "9957773504", "9957773712", "9957773165", "9957772910", "9957774889", "9585934950", "9585932088", "9957774134", "9957775044", "9957783919", "9300044138", "9957773266", "9969997817", "9957774294", "9957773042", "9957782516", "9300015313", "9957001264", "9957774826", "9957773521", "9300010071", "9957774058", "9957772805", "9957774026", "9957772831", "9300017473", "9957772837", "9957773382", "9957784607", "9957774940", "9957773941", "9300042907", "9957774436", "9585933894", "9957772640", "9957772846", "9957772857", "9957773315", "9585932092", "9957774659", "9957772697", "9957774092", "9957772987", "9300012710", "9957773241", "9957773010", "9957774297", "9957774148", "9585933882", "9300041754", "9957773465", "9957001097", "9585931222",
#     "9957773630", "9957781099", "9957774172", "9957773351", "9957774295", "9957773691", "9957774298", "9957773603", "9957774510", "9957772809", "9957774044", "9957775007", "9957773249", "9969993940", "9957772718", "9957772906", "9957772976", "9957774748", "9957772961", "9969998729", "9957785273", "9957773900", "9957774601", "9957774987", "9585933881", "9966992563", "9957782521", "9957789166", "9957772815", "9957774215", "9300010483", "9957790302", "9957772743", "9957773118", "9957772700", "9957773235", "9957772885", "9300013117", "9957785451", "9957001015", "9957774745", "9957773711", "9957773107", "9300018757", "9957774664", "9957774432", "9957772920", "9585936756", "9957774145", "9957774305", "9957774838", "9957773466", "9957773926", "9957772979", "9957773816", "9957772731", "9957774567", "9969998730", "9966997818", "9957790264", "9957774519", "9957774338", "9957774376", "9957774453", "9957772946", "9957773178", "9957790482", "9957774015", "9957772965", "9957773163", "9957774590", "9957774020", "9957773310", "9300011436", "9300017452", "9969993864", "9957773051", "9957774050", "9300017493", "9957799441", "9957774300", "9585932928", "9957773553", "9300016225", "9585934133", "9957773832", "9957774132", "9966992557", "9957001034", "9300011106", "9957772817", "9957772981", "9585938813", "9966992539", "9957788205", "9957773073", "9957784578", "9957774766", "9957773936", "9957774358", "9957773259", "9969993241", "9957772814", "9957774972", "9957799276", "9957774063", "9957774418", "9957773380", "9969991832", "9957793507", "9300044982", "9957773129", "9957780977", "9966992507", "9585936639", "9585939536", "9957774674", "9957798979", "9969997809", "9957786755", "9957786787", "9957790305", "9966991195", "9585939253", "9957772845", "9957773983", "9957773430", "9957773046", "9957773080", "9957001054", "9300041288", "9957786777", "9957773136", "9957772761", "9585939256", "9300042484", "9300042254", "9957799250", "9957773458", "9957774243", "9957773650", "9957772715", "9957774696", "9957774854", "9585939636", "9957001099", "9585936785", "9957773308", "9957774301", "9585938643", "9957774109", "9957774004", "9300043934", "9957774224", "9585932919", "9957797799", "9969992201", "9957798196", "9300043979", "9957790603", "9300015535", "9585938776", "9957797809", "9957773690", "9957784169", "9300019396", "9957787974", "9300017411", "9957794940", "9969997860", "9300017465", "9957796219", "9957774864", "9300013377", "9966990096", "9957774029", "9957799519", "9585936929", "9957794003", "9957773459", "9957774653", "9957773883", "9957774998", "9957001255", "9957773907", "9957774506", "9957773242", "9966997182", "9957789007", "9966996869", "9957774087",
#     "9300018382", "9300023934", "9300025907", "9300030879", "9300036124", "9300036474", "9300037464", "9300038275", "9300042803", "9300061860", "9300063256", "9300069283", "9300071747", "9300068953", "9300069067", "9300070683", "9300074120", "9300071903", "9300074323", "9300071758", "9300071915", "9300074113", "9300091312", "9300078058", "9300075717", "9300076676", "9300075727", "9300082669", "9300091271", "9300101126", "9300082608", "9300092937", "9300100230", "9300106082", "9300106080", "9300102838", "9300102931", "9302000733", "9302001496", "9302003641", "9300090601", "9300090753", "9302006212", "9302009231", "9300093123", "9300098083", "9300098901", "9300102295", "9957001839", "9957001886", "9957001882", "9957783941", "9585933118", "9300031338", "9966998948", "9300099525", "9300091280", "9300103559", "9300105078", "9300029370", "9300070160", "9300065265", "9957002053", "9957002071", "9300088283", "9300101189", "9957785267", "9585939282", "9957783706", "9585939460", "9957783765", "9957785871", "9300104177", "9957001868", "9302004110", "9300063209", "9300088300", "9957789122", "9957789017", "9957789019", "9957789117", "9300103177", "9300065223", "9300034006", "9957789049", "9957789175", "9302000721", "9300098069", "9300010304", "9302000335", "9302000329", "9302008610", "9300104197", "9957789138", "9300098434", "9300093973", "9957783731", "9585933076", "9957789016", "9300105797", "9300011092", "9300028566", "9300028572", "9300103226", "9957001867", "9300039080", "9300100890", "9300065334", "9300021125", "9966991472", "9302006020", "9300100757", "9957001824", "9300044037", "9300103292", "9957001874", "9300106727", "9300067686", "9302009220", "9300109278", "9300105799", "9300035925", "9302006606", "9300073696", "9300018496", "9300068018", "9300030818", "9300063342", "9957790171", "9300103345", "9300061447", "9300104314", "9300035294", "9300014733", "9300060507", "9300060130", "9966995728", "9300038046", "9300031340", "9300105820", "9300036306", "9300100869", "9302004437", "9300107376", "9302000928", "9300090567", "9300043886", "9300020697", "9957797349", "9300104634", "9300104621", "9300035922", "9300103466", "9300038665", "9957001878", "9302005562", "9300023938", "9300041234", "9300100903", "9300043880", "9302001522", "9300093979", "9300100872", "9300074388", "9300024418", "9300019725", "9300015920", "9300091216", "9300061315", "9300100744", "9300100746", "9300071988", "9300075710", "9957790767", "9300067990", "9300038070", "9300030828", "9300060504", "9300038410", "9300092964", "9302005639", "9300102690", "9300063356", "9300034533", "9300106561", "9302001277", "9300020276", "9300104647", "9300073708", "9300090692", "9300092370", "9300075762", "9300090676", "9300072987", "9300097978", "9300108425", "9966990406", "9300035972", "9302000896", "9300104322", "9302000875", "9957001884", "9300025201", "9302008020", "9300012166", "9300067597", "9300061776", "9300024472", "9300020728", "9969992974", "9300109536", "9300104015", "9969993814", "9300021833", "9300067515", "9302000484", "9300014169", "9300012638", "9300100835", "9300013651", "9300104434", "9302000972", "9300040763", "9302001525", "9300019215", "9300106107", "9300090813", "9300100747", "9300035924", "9300063462", "9300071749", "9300024490", "9300024421", "9300100873", "9300106781", "9957001866", "9957001863", "9957001885", "9300037500", "9300071737", "9300100280", "9300041539", "9300106581", "9300062526", "9300089611", "9300106674", "9302005690", "9300104324", "9300042591", "9300062433", "9300039620", "9300010314", "9300025442", "9300038218", "9300064056", "9300100864", "9300106723", "9302005654", "9300104496", "9300024431", "9300034206", "9969994963", "9300090794", "9300090762", "9302006625", "9300020418", "9966995476", "9300074410", "9300031560", "9300090804", "9300090703", "9300091228", "9300010740", "9300037852", "9300093969", "9300082303", "9969997072", "9300109482", "9957781327", "9300104311", "9300071781", "9300104941", "9302000994", "9969995313", "9300071918", "9300102714", "9300071909", "9302004409", "9300064091", "9300039151", "9300060850", "9300018475", "9302001050", "9302000927", "9300030820", "9957001871", "9300067903", "9300100175", "9300031508", "9300090572", "9300034542", "9957790161", "9300063411", "9300106811", "9969995887", "9300092027", "9300039623", "9300038400", "9966991457", "9300104347", "9300020472", "9957001875", "9300107146", "9300042842", "9300098182", "9300090726", "9300104082", "9300062434", "9300025320", "9300028573", "9300097309", "9300090803", "9300090730", "9300090705", "9957797351", "9300023927", "9300104068", "9300062302", "9300090738", "9300036737", "9300105146", "9300024419", "9300065833", "9300090712", "9300012895", "9300063369", "9300100851", "9300025617", "9300063358", "9300100908", "9302000915", "9302001047", "9300071753", "9300073668", "9300102787", "9300065737", "9300105801", "9300103114", "9957001890", "9300109475", "9300105819", "9300020521", "9300100821", "9300105232", "9300031938", "9300105817", "9300103955", "9300100822", "9300020257", "9300030699", "9300060126", "9302005561", "9957001873", "9300097308", "9966991710", "9300030227", "9302000907", "9302005701", "9966996630", "9300065363", "9300109275", "9300062269", "9300093381", "9300034537", "9300092959", "9302000397", "9300108465", "9300106530", "9300023510", "9300089656", "9300014984", "9300071718", "9300103056", "9300091207", "9957797366", "9300013456", "9300106554", "9300102630", "9957780243", "9302004575", "9300063386", "9300100902", "9300106676", "9300106686", "9300103882", "9300105038", "9300063037", "9302001219", "9300027262", "9300100408", "9300039618", "9300041525", "9300044837", "9300025472", "9300017229", "9302000301", "9300061710", "9300027946", "9300013981", "9300107196", "9300067838", "9300103305", "9300104030", "9300103038", "9300062393", "9300011524", "9300062312", "9300090704", "9302004622", "9300036707", "9300107375", "9300091233", "9300090698", "9300084281", "9300090621", "9300025909", "9300011008", "9300060848", "9300063371", "9300072989", "9300071750", "9300031305", "9300104313", "9300017737", "9302003372", "9300020878", "9300038045", "9300060971", "9300067596", "9300071779", "9300039035", "9300041219", "9300021933", "9969995703", "9302001521", "9300074214", "9300072188", "9302000509", "9300100641", "9300031734", "9300090691", "9300015597", "9300100896", "9300016656", "9300104087", "9300038892", "9300098091", "9302001513", "9302000780", "9300103050", "9300104021", "9300076652", "9300106448", "9300036127", "9302005569", "9300105549", "9302003973", "9300035830", "9300020253", "9300038243", "9300012858", "9300020238", "9300098978", "9300073669", "9300038511", "9300067727", "9300109523", "9300104169", "9300039061", "9302000783", "9300030702", "9300105301", "9300071910", "9957001892", "9969996940", "9302004009", "9300013677", "9957001889", "9300016193", "9300038723", "9300100798", "9300103817", "9300100640", "9300091270", "9300035346", "9300010368", "9300038807", "9957001879", "9300071751", "9300081803",
#     "9300105958", "9300105060", "9300038236", "9300030168", "9300091266", "9300039048", "9300036451", "9300090680", "9302003974", "9300103989", "9300013973", "9300100433", "9300036981", "9300089122", "9300067796", "9300103051", "9300103357", "9302009910", "9300024642", "9300103676", "9957001887", "9302001054", "9300014143", "9300013713", "9302004342", "9300013668", "9300035233", "9300035242", "9300039615", "9302000628", "9302001438", "9300081708", "9300081804", "9300100823", "9300061605", "9300060967", "9300023964", "9300072056", "9300020615", "9300020273", "9300043591", "9300102540", "9300014200", "9302000809", "9300063409", "9300103025", "9300102824", "9300071939", "9969991290", "9300075798", "9300040740", "9300060815", "9300106416", "9302004006", "9300018543", "9300072054", "9300021072", "9302001130", "9300067613", "9300034579", "9300025859", "9300103047", "9302002088", "9300090636", "9300020776", "9300013967", "9300090642", "9302001285", "9302001278", "9302001310", "9300014413", "9300038760", "9300078097", "9302004419", "9300035150", "9302004486", "9300103309", "9300037535", "9300067643", "9302000870", "9300021204", "9300104060", "9300037179", "9300105807", "9300062410", "9302000716", "9300100182", "9300061977", "9300064252", "9300029289", "9300090710", "9300036654", "9300021195", "9969998910", "9300104312", "9300060598", "9300100185", "9300100187", "9300087323", "9300075857", "9300103899", "9302000943", "9300060180", "9302009493", "9300093928", "9302001307", "9300060545", "9300103061", "9300082704", "9300037748", "9300063288", "9300034024", "9300071913", "9300087320", "9300061774", "9302003358", "9300021865", "9300104451", "9300021914", "9300042530", "9300034547", "9300041237", "9300035235", "9300037346", "9300037481", "9300019886", "9300065538", "9302001440", "9300100863", "9969992171", "9300014903", "9300100820", "9300038354", "9300104706", "9300108354", "9300104702", "9966992437", "9300072976", "9300063361", "9300072625", "9957001877", "9300025267", "9300021937", "9302004407", "9300091249", "9300031057", "9969997073", "9302000489", "9302004125", "9300042521", "9300067693", "9300017732", "9300010310", "9300071905", "9300100941", "9300021568", "9300064065", "9300109623", "9300090205", "9300109465", "9300100803", "9302000312", "9300037112", "9300011589", "9300100172", "9300037956", "9300104098", "9300072908", "9300061848", "9300062780", "9300037619", "9300028510", "9302000899", "9300034904", "9302004505", "9300014776", "9300037345", "9966990576", "9300103090", "9302004337", "9300067826", "9300021949", "9300067276", "9300082434", "9300016668", "9300060921", "9966991493", "9957790457", "9300067886", "9302000678", "9300013480", "9300102531", "9300024461", "9300027097", "9300037292", "9300074371", "9300065135", "9300072068", "9300102042", "9300090167", "9300108269", "9300103860", "9300031936", "9300104310", "9300025439", "9300060871", "9300104072", "9300022554", "9302004439", "9300013457", "9300107400", "9300039077", "9302001293", "9300107338", "9300102719", "9302005018", "9300103360", "9300076595", "9300065157", "9300075880", "9300103072", "9300073406", "9300011576", "9300090630", "9300027155", "9300100415", "9300060759", "9300038097", "9300106895", "9300074366", "9300075866", "9300018370", "9300060563", "9300090613", "9300092938", "9300071912", "9300041229", "9300093924", "9300019406", "9300030650", "9300106454", "9300013970", "9300063424", "9969992975", "9300097305", "9300109472", "9300103447", "9302004408", "9300042518", "9302004051", "9302000305", "9300063590", "9300025872", "9300039066", "9300102004", "9300071914", "9300038931", "9302005581", "9300038225", "9300072042", "9300104119", "9300024450", "9300025080", "9300016185", "9966997013", "9300037044", "9300075334", "9300013622", "9300021093", "9300104408", "9300018431", "9300100670", "9302001036", "9302006226", "9302004645", "9300071917", "9300100730", "9300100725", "9300033754", "9300071886", "9300104051", "9300015983", "9300093637", "9957001897", "9300100799", "9300020616", "9300071787", "9300106945", "9300097339", "9300067424", "9300090605", "9300062690", "9300102128", "9300100921", "9300071828", "9302001009", "9300019220", "9300103076", "9300020352", "9300038830", "9300036450", "9300024432", "9300022256", "9300030475", "9300039579", "9957001902", "9300106716", "9300104094", "9300024479", "9300100791", "9300039017", "9300028560", "9300041171", "9300104048", "9300072460", "9300019117", "9300073702", "9300028509", "9300109847", "9300022840", "9300019274", "9300062355", "9302001080", "9300024487", "9302001302", "9300067017", "9300037370", "9300068012", "9300025609", "9300105883", "9300071797", "9300067847", "9300100955", "9300100287", "9300060139", "9300019272", "9302000845", "9300091479", "9300036131", "9300064961", "9300031719", "9300014419", "9300109642", "9300104145", "9300021153", "9300038952", "9300065306", "9300034399", "9302004140", "9300063736", "9300013463", "9302005768", "9300074039", "9300081590", "9300097250", "9300014750", "9302001295", "9300031728", "9300087340", "9300018369", "9300018432", "9300016118", "9300036904", "9302001150", "9302005083", "9300062818", "9302004625", "9300073601", "9302008676", "9300029171", "9302004052", "9302000807", "9300017212", "9300090681", "9300036915", "9300039613", "9300016198", "9300018393", "9300037763", "9300104585", "9300016601", "9300032588", "9300106690", "9300107859", "9300090240", "9300024072", "9302005051", "9300107128", "9300024996", "9300025266", "9300072652", "9300036347", "9300090526", "9302000472", "9300041120", "9300073557", "9300105442", "9300074032", "9300038786", "9300065532", "9300071883", "9300015984", "9300091330", "9966991479", "9300034291", "9300105144", "9300100205", "9300025661", "9300100763", "9300106849", "9300036122", "9300034919", "9300073868", "9957001904", "9300021802", "9300062656", "9302004922", "9300035855", "9300072093", "9300106269", "9300100258", "9300078105", "9300073847", "9300030560", "9300039068", "9300104344", "9300062376", "9300018560", "9300072466", "9300061514", "9302000306", "9300102072", "9300072367", "9300104599", "9969994022", "9300100656", "9300106414", "9300067885", "9300062824", "9300067374", "9300074076", "9300037011", "9302008699", "9300062390", "9300035810", "9302003941", "9300081783", "9300061499", "9300060125", "9300068104", "9300103969", "9300033154", "9302004066", "9300106406", "9300021094", "9300014278", "9300100749", "9302000652", "9300089048", "9300072048", "9300081829", "9300075474", "9300073602", "9300089095", "9300067031", "9300102036", "9300030200", "9300013720", "9300017684", "9300025901", "9302009626", "9300092962", "9300078140", "9957001899", "9302000767", "9302000671", "9300036651", "9300062386", "9300078303", "9300107849", "9300061552", "9300074338", "9302000328", "9302000326", "9302005080", "9300064956", "9300042878", "9302001107", "9300087332", "9300041124", "9300106735", "9300022872", "9300107116", "9302004350", "9300071904", "9300081819", "9300102400", "9300038960", "9300093373", "9300073575", "9302008637", "9300038341", "9300072267", "9300098839", "9300081585", "9300090678", "9300100233", "9302005099", "9300072820", "9300062807", "9300090670", "9300106765", "9300034838", "9300100423", "9300035818", "9300037408", "9957001907", "9300102321", "9300013955", "9300073662", "9300012837", "9300104370", "9300109756", "9300071830", "9302001355", "9300100721", "9300034176", "9300098870", "9300060109", "9302000717", "9300105137", "9300076165", "9300107409", "9300100655", "9302009539", "9300089053", "9300093792", "9302009039", "9300090604", "9300073858", "9300036836", "9300036921", "9300034861", "9300037286", "9300039554", "9300019518", "9300075187", "9300018557", "9300021404", "9302001402", "9302004025", "9302006205", "9300038737", "9300071741", "9300102050", "9302009063", "9302000337", "9300060438", "9300041576", "9300104049", "9300025920", "9300102686", "9300109768", "9300090682", "9300021109", "9300024457", "9300071721", "9300033195", "9300088935", "9300103953", "9300091409", "9300034906", "9300073837", "9300013725", "9300028552", "9300034260", "9300103201", "9302005936", "9300098082", "9300062369", "9300092852", "9300090589", "9300024463", "9300072991", "9300097986", "9302004475", "9300103858", "9302000313", "9302000293", "9302005644", "9300102060", "9300097369", "9300083463", "9300040322", "9300073855", "9300103093", "9300102730", "9300035498", "9300038711", "9300025210", "9300072454", "9300036914", "9300034582", "9300090598", "9300098087", "9300062603", "9300063188", "9300035737", "9300034827", "9300075203", "9300072655", "9300093789", "9300088973", "9300017683", "9300071719", "9300072330", "9300102906", "9300093885", "9302006061", "9302000308", "9300068041", "9300104139", "9300029206", "9300039334", "9302001136", "9300072421", "9302001356", "9300031961", "9300090580", "9300065064", "9300065253", "9300041106", "9302008636", "9300103544", "9300061546", "9300088736", "9300088937", "9302001096", "9300020677", "9300064104", "9300098940", "9300104674", "9302004650", "9300037047", "9300106048", "9302004515", "9300098759", "9300014763", "9300067024", "9300071748", "9302001467", "9300107325", "9300104350", "9300089665", "9300109375", "9300072796", "9300098760", "9300098064", "9300088218", "9300100075", "9302004501", "9300106720", "9302000836", "9300090304", "9300072842", "9300104912", "9300037019", "9300067721", "9300102114", "9300071884", "9300060572", "9300062346", "9300102852", "9300089596", "9300103398", "9300063969", "9302001415", "9300097453", "9300099497", "9300073554", "9300100053", "9300100150", "9300101131", "9300100097", "9300100072", "9300097245", "9300102657", "9300099493", "9300102675", "9300099520", "9300099829", "9300102638", "9300100078", "9300102943", "9300102685", "9300088228", "9300088330", "9300088765", "9300088932", "9300088934", "9300097426", "9300097431", "9300100131", "9300097413", "9300099510", "9300099308", "9300099889", "9300102568", "9300102653", "9300102674", "9300068793", "9300069385", "9300091456", "9300092837", "9300088220", "9300100130", "9300096128", "9300095872", "9300099830", "9300102635", "9300099300", "9300088448", "9300061008", "9300082491", "9300068917", "9300072814", "9300074619", "9300074740", "9300082495", "9300068921", "9300091463", "9300061278", "9300081923", "9300088212", "9300097243", "9300096827", "9300097381", "9300099394", "9300099400", "9300099800", "9300102689", "9300060670", "9300066846", "9300062006", "9300074536", "9300069543", "9300061010", "9300081736", "9300064138", "9300074653", "9300101121", "9300088942", "9300100151", "9300099529", "9300102734", "9300066243", "9300070833", "9300100045", "9300100076", "9300100140", "9300100160", "9300099484", "9300099796", "9300099895", "9300102637", "9300102648", "9300102654", "9300102793", "9300074296", "9300069527", "9300088044", "9300100170", "9300066561", "9300066560", "9300066568", "9300061060", "9300061284", "9300099801", "9300099890", "9300099894", "9300102698", "9300102847", "9300099791", "9300088454", "9300069532", "9300072594", "9300074704", "9300088284", "9300102784", "9300102945", "9300099491", "9300088450", "9300099343", "9300088182", "9300088210", "9300097318", "9300068952", "9300091457", "9300060700", "9300074681", "9300088328", "9300088340", "9300097246", "9300076923", "9957001905", "9957001927", "9300099353", "9300099492", "9300102854", "9300029193", "9302002418", "9302004919", "9300074310", "9302005650", "9300091491", "9300073096", "9300068927", "9300069325", "9300088386", "9300100079", "9300089030", "9300099804", "9300102765", "9300088285", "9300101130", "9300099340", "9300099803", "9300099798", "9300102845", "9300102693", "9300089199", "9300082764", "9300063164", "9302000837", "9300089838", "9300036413", "9300031531", "9957001929", "9300100147", "9300092893", "9300039956", "9300102052", "9300076616", "9300070904", "9300062844", "9300065910", "9302000376", "9300062259", "9300109212", "9300074121", "9300061412", "9302004105", "9300104308", "9300104306", "9302005053", "9302002078", "9302000831", "9302005503", "9300035067", "9300099809", "9300099820", "9300102735", "9300102863", "9300083769", "9957001926", "9300074357", "9957001930", "9300092859", "9300063013", "9300062284", "9300107167", "9300106724", "9957001921", "9300104272", "9300071014", "9300030408", "9300105853", "9300081412", "9300029112", "9300089832", "9300100268", "9300063029", "9302006115", "9957002032", "9300104307", "9302002086", "9300061518", "9300019554", "9300108290", "9300100137", "9300106434", "9300018591", "9300038241", "9300065808", "9300039163", "9300108209", "9300010276", "9300069068", "9300090136", "9300108898", "9300108591", "9300081840", "9300100126", "9300025055", "9300108211", "9300064755", "9300035744", "9302008022", "9300029640", "9300041236", "9300081415", "9300103191", "9957001942", "9300093886", "9300072899", "9300064954", "9300072978", "9302005820", "9302001374", "9300109616", "9300031715", "9300069084", "9302002085", "9300108215", "9300106749", "9300078280", "9300067097", "9300062235", "9300062263", "9300108287", "9300090627", "9957001944", "9300100158", "9300024019", "9300106061", "9302009665", "9300029928", "9957001938", "9300037886", "9300025548", "9300075380", "9300102755", "9300104291", "9957001963", "9300034599", "9300102624", "9300109408", "9302001304", "9300098874", "9300063722", "9300070903", "9300067380", "9300109250", "9300037861", "9300064364", "9957001952", "9300107764", "9300108510", "9300061272", "9300064737", "9300069092", "9300036714", "9302002395", "9300062744", "9300063316", "9300065104", "9300098509", "9300060956", "9302008825", "9300109023", "9300038817", "9302005159", "9300069115", "9300109612", "9300034593", "9300034017", "9302005105", "9300103556", "9300092961", "9957001898", "9300105401", "9300076188", "9957001915", "9957001925", "9300073038", "9300031344", "9302000835", "9300062270", "9300068098", "9300072687", "9300076173", "9300074311", "9300037260", "9300109363", "9300012854", "9302002311", "9300018520", "9300062243",
#     "9300041428", "9957782400", "9957799006", "9957001420", "9214342235", "9300020291", "9957001634", "9300023923", "9957002126", "9300017479", "9957774136", "9585931677", "9300038957", "9300016130", "9957001743", "9300042620", "9957795623", "9957774801", "9966992014", "9300014485", "9957796976", "9302008796", "9957770874", "9300044266", "9957784303", "9300034185", "9957772086", "9969994866", "9300040438", "9957001840", "9300026782", "9585937326", "9300060981", "9957789739", "9957770818", "9300014468", "9300014988", "9300010916", "9300025458", "9957785494", "9302001547", "9957790383", "9585933911", "9585942397", "9957001787", "9969996049", "9300019962", "9300017915", "9957770346", "9969996575", "9966998559", "9957772538", "9585938858", "9300106806", "9957788827", "9957795306", "9957782584", "9969991806", "9957791876", "9966998611", "9957785544", "9957770522", "9300010630", "9052862009", "9969994324", "9300022344", "9300016722", "9969990983", "9300043519", "9300025466", "9969994247", "9957783771", "9300011938", "9300070942", "9585933200", "9957790410", "9300100855", "9969990813", "9957799750", "9957001761", "9957772245", "9966996915", "9957780622", "9957001734", "9585938608", "9300017652", "9969997388", "9957001302", "9957797911", "9957773117", "9969998141", "9300013412", "9957001417", "9300044298", "9300027910", "9957780328", "9300039211", "9957783713", "9300011025", "9957787171", "9300027753", "9957788311", "9300013989", "9966991376", "9966990365", "9957001288", "9957785669", "9969998311", "9957790596", "9957001608", "9585937369", "9957772958", "9969992915", "9957795354", "9957700164", "9957700542", "9300013990", "9300036516", "9300027383", "9966994695", "9300063621", "9300020293", "9969996573", "9300036698", "9300096539", "9957794408", "9957001595", "9300028590", "9300044282", "9957788278", "9300036080", "9957792809", "9957001718", "9300036343", "9957001823", "9300034142", "9300035645", "9300019244", "9300042697", "9300108671", "9957797331", "9300025694", "9957001695", "9957001716", "9957784522", "9300028577", "9300043463", "9300016553", "9957001732", "9300107119", "9957772921", "9957001737", "9585938366", "9957794834", "9957799703", "9969991626", "9957786702", "9585936532", "9300040263", "9300019058", "9300039169", "9957001817", "9957794044", "9300024105", "9957001522", "9969993484", "9585939358", "9957001490", "9300037600", "9300044301", "9957780175", "9957786200", "9300070562", "9966992537", "9957771808", "9300043858", "9300012613", "9969996274", "9969994764", "9957001352", "9300011961", "9585936268", "9957786747", "9300012141", "9300036003", "9957774496", "9300030617", "9957001381", "9969993911", "9957772398", "9957785497", "9300014648", "9300042532", "9969990940", "9969998098", "9957787457", "9966997648", "9957798482", "9957001210", "9957781516", "9957781567", "9300104645", "9966994807", "9957002179", "9957700364", "9957798043", "9300026804", "9300034431", "9969991095", "9957798140", "9966997910", "9300026202", "9300019262", "9300026832", "9957773749", "9957795895", "9585938277", "9966998195", "9585936857", "9969996296", "9957774760", "9957774711", "9300037375", "9300012093", "9957001229", "9300021402", "9300012731", "9300021400", "9300034417", "9966991586", "9969994241", "9300014517", "9957001738", "9300015209", "9300023848", "9957782662", "9300041577", "9300014259", "9585937211", "9969992377", "9300027791", "9957773247", "9300010084", "9957001295", "9957797319", "9957001735", "9957785016", "9585932300", "9300040809", "9300030696", "9300087894", "9300010115", "9300038456", "9957774021", "9969996649", "9302001448", "9957787798", "9957782446", "9969992926", "9969998085", "9300018493", "9300024903", "9957771725", "9957798332", "9300011448", "9300018107", "9957001820", "9957771267", "9300083130", "9300104081", "9966996403", "9300038470", "9957774308", "9966995626", "9957001404", "9957791409", "9300014332", "9957780238", "9302003416", "9585936309", "9300098054", "9969992965", "9300067765", "9966994697", "9957794756", "9966992674", "9957771159", "9957772092", "9969998631", "9957770570", "9957774959", "9957795167", "9300036061", "9957773209", "9957782422", "9300027709", "9300031376", "9300011729", "9957002388", "9300022300", "9300031350", "9969998827", "9957782484", "9966995366", "9300020317", "9585933908", "9957798581", "9300038810", "9300040274", "9957782562", "9957002103", "9300015668", "9957797454", "9966992347", "9300105142", "9969995316", "9957001556", "9300072291", "9957771043", "9300010188", "9300027785", "9300037414", "9585935868", "9966996645", "9585935859", "9969998030", "9300070273", "9966990189", "9957001751", "9966996558", "9300019315", "9957001408", "9300040208", "9300017758", "9300010656", "9957772509", "9300027843", "9300043242", "9957782851", "9585931009", "9300026960", "9957797094", "9969990175", "9957798248", "9300030390", "9300038232", "9957793559", "9300044520", "9300041103", "9957001788", "9957770851", "9957788593", "9969994237", "9969995200", "9585932029", "9957770138", "9300014042", "9957796467", "9957773846", "9300010853", "9300019525", "9969995746", "9585935986", "9957799246", "9969998858", "9300030639", "9957796609", "9957001651", "9585939463", "9969997984", "9957782612", "9957780125", "9957770167", "9957002131", "9585932764", "9957001338", "9300041143", "9300015669", "9300018159", "9957700102", "9957789741", "9957773303", "9585933229", "9957773514", "9300015065", "9585939707", "9300093902", "9302003735", "9957001667", "9957771935", "9969992388", "9300042345", "9300043861", "9957799095", "9957790741", "9302002539", "9300069580", "9300022553", "9957789243", "9300010189", "9300013378", "9300037137", "9969998300", "9300073471", "9300084243", "9300040430", "9300025636", "9300100844", "9300026769", "9957792738", "9957771507", "9966997930", "9300031789", "9300018956", "9957700519", "9966992101", "9957774259", "9957770993", "9300038202", "9300017922", "9300035968", "9957771843", "9966996350", "9300103211", "9957799567", "9957001061", "9300010009", "9300044048", "9300039501", "9957774927", "9300025459", "9300013198", "9300038112", "9957781648", "9300040220", "9957780967", "9957782231", "9969994791", "9300041583", "9957773133", "9957001617", "9300026780", "9300065820", "9957798901", "9957002168", "9957784860", "9957001625", "9966995909", "9966992094", "9957001236", "9957001274", "9966994127", "9300076252", "9957770688", "9300021393", "9966993120", "9957792588", "9585938225", "9300040803", "9300061051", "9957770651", "9585934339", "9957773226", "9300016065", "9300041565", "9957772030", "9957001772", "9300038525", "9300025075", "9957002425", "9957774296", "9957774023", "9957780476", "9966992091", "9957794500", "9300040583", "9969995493", "9957774600", "9300103004", "9957796279", "9957770480", "9957799332", "9300036503", "9300038101", "9585933172", "9300020800", "9300038573", "9300011503", "9300104073", "9300017815", "9300025137", "9300034602", "9957788457", "9957002154", "9300011172", "9300020108", "9966991547", "9300025435", "9300014619", "9957783594", "9302002073", "9300028537", "9300021553", "9957001319", "9969996267", "9300096191", "9969992001", "9300016788", "9957001285", "9957773937", "9300013942", "9957772231", "9957798981", "9585942460", "9957795545", "9300027723", "9957797234", "9300039503", "9957773233", "9966993193", "9957002190", "9300026567", "9300027773", "9957782403", "9300034803", "9957773457", "9300020296", "9957781199", "9300025331", "9585932933", "9957793604", "9957001398", "9300028249", "9300090614", "9300041214", "9969996557", "9957002169", "9300043045", "9300012138", "9957785977", "9966993870", "9957770822", "9966992600", "9300041355", "9300036514", "9300037002", "9969990167", "9957770698", "9300043539", "9957795278", "9957794361", "9300015848", "9957799245", "9300026386", "9957001615", "9957789193", "9300028429", "9957002115", "9300090497", "9957772524", "9300015581", "9957001089", "9300036616", "9957783683", "9300042155", "9300102270", "9300011830", "9300104180", "9957001534", "9969995489", "9957795327", "9300023982", "9957789055", "9300041729", "9300042053", "9300011192", "9957791934", "9300039136", "9957001471", "9957783102", "9300028227", "9957775121", "9300016169", "9966995940", "9300038768", "9585939029", "9957798792", "9957789742", "9300016470", "9300016667", "9585939683", "9300018611", "9302002217", "9957784176", "9300042243", "9966993396", "9585932747", "9957773931", "9957774732", "9966997030", "9957787188", "9585937242", "9300030345", "9957786869", "9300025301", "9300083903", "9957781809", "9300106596", "9957770474", "9957001334", "9957796469", "9300031319", "9957001350", "9957002358", "9585933469", "9300037434", "9957780310", "9300024427", "9957785146", "9585939779", "9966991763", "9300012276", "9300024980", "9300071937", "9300013518", "9300034180", "9300038215", "9969998649", "9969990090", "9300090747", "9969992077", "9957002124", "9969997704", "9300067430", "9969996314", "9957002369", "9300025101", "9957795430", "9957782423", "9957796704", "9300105759", "9300017468", "9957772521", "9969993079", "9300010341", "9957791807", "9957001023", "9300109215", "9969997787", "9300018843", "9957001799", "9300011538", "9300020120", "9585936732", "9300025465", "9957771897", "9957783788", "9300026272", "9300035570", "9585938089", "9300011897", "9969992838", "9300018905", "9957770846", "9957791514", "9957798003", "9300037189", "9957001644", "9585935282", "9300013498", "9957791325", "9585931926", "9957790109", "9300030388", "9300020590", "9300034475", "9300030649", "9957700119", "9300011939", "9966996201", "9969995908", "9966992275", "9969998461", "9957788027", "9957784802", "9957799308", "9957001747", "9957772581", "9957785442", "9300026856", "9957771601", "9957775057", "9969995477", "9300037159", "9300027720", "9300072566", "9957798042", "9300035936", "9957001828", "9957772926", "9585934221", "9585936384", "9957001753", "9957791172", "9300043758", "9957001699", "9957001814", "9966991079", "9957788465", "9957001442", "9300017157", "9957774009", "9957789379", "9957780083", "9300024048", "9300020295", "9300039374", "9966990801", "9300024006", "9957773405", "9957001359", "9957001803", "9300011112", "9300019945", "9585936742", "9300012771", "9300044579", "9957774788", "9957770792", "9957787525", "9300024603", "9300041204", "9957797400", "9957774933", "9957771464", "9957001394", "9300071997", "9966993541", "9957799623", "9300014456", "9969991850", "9957797601", "9969996870", "9957002139", "9300013811", "9300028330", "9957001807", "9969993341", "9300024204", "9957789440", "9300019905", "9300021015", "9300013332", "9969998338", "9300012219", "9957001496", "9300041280", "9300022858", "9969995062", "9300025957", "9300037625", "9957780912", "9585934044", "9957780067", "9969994961", "9969998918", "9966996716", "9957002344", "9585931661", "9585936548", "9300026740", "9957788900", "9300039337", "9957788452", "9300027783", "9957774018", "9300042706", "9957796854", "9957002188", "9957795696", "9957001019", "9300031886", "9957771511", "9966990053", "9300035868", "9300025081", "9957792263", "9300023985", "9300016856", "9300038264", "9957002125", "9300026503", "9969996373", "9300014408", "9300010299", "9300035096", "9966993756", "9585933608", "9966994381", "9966997928", "9300021928", "9957774341", "9302006094", "9969998472", "9957799204", "9966992648", "9969998454", "9300027849", "9966992728", "9585933464", "9969994956", "9300076227", "9957001749", "9957799590", "9300025460", "9957770711", "9957792388", "9300011138", "9969993382", "9957780553", "9300020736", "9300015250", "9300024069", "9300020848", "9957772343", "9957774734", "9300031636", "9957774709", "9300071981", "9957001649", "9957002173", "9300043104", "9957771483", "9957783428", "9300082141", "9300027376", "9957001680", "9300102151", "9300021230", "9300076233", "9957774523", "9957001596", "9300040559", "9957700478", "9957001561", "9300097322", "9957773173", "9957790069", "9957796345", "9300016819", "9957772347", "9957002145", "9585933572", "9585932677", "9957770920", "9585936760", "9300031677", "9300020393", "9957772897", "9957797691", "9300036391", "9585937698", "9957772043", "9300027375", "9957791886", "9300028584", "9957001209", "9957792256", "9300024046", "9585933805", "9300031035", "9957787445", "9300067673", "9966992036", "9957793441", "9957770502", "9957774909", "9966992690", "9300026756", "9300034983", "9300039461", "9957771698", "9966998908", "9300028427", "9957771561", "9957799724", "9300100856", "9300025110", "9957786403", "9957780876", "9957782225", "9957773710", "9957770641", "9585938287", "9300013406", "9957780691", "9957787478", "9969993304", "9966997746", "9957780908", "9300035367", "9957770335", "9957786864", "9957773672", "9969995089", "9957781239", "9957001705", "9969998145", "9957794318", "9585938913", "9957001259", "9300018433", "9300067363", "9966990577", "9957798469", "9957789462", "9969990482", "9300028473", "9957001238", "9957792890", "9969991871", "9957001832", "9957001396", "9957771594", "9966994959", "9300027379", "9300021862", "9585936151", "9957783117", "9300017536", "9957794574", "9300026339", "9966990355", "9957773027", "9302002611", "9957786718", "9957785321", "9300026362", "9302006619", "9957789188", "9300017183", "9957001754", "9969997930", "9300024365", "9300041596", "9300037161", "9300016596", "9300016200", "9966996408", "9300017707", "9957788402", "9300042753", "9300025453", "9300037136", "9585936983", "9957001358", "9300020109", "9300016318", "9300022527", "9300038527", "9957785998", "9300011965", "9957785538", "9966998970", "9300096190", "9957002304", "9957784766", "9957001487", "9957001039", "9969992977", "9957001055", "9957001650", "9957773378", "9585933576", "9300025352", "9966996563", "9585936682", "9300016737", "9969992149", "9957001653", "9300018185", "9957001550", "9957795431", "9957792857", "9300107963", "9957770136", "9969995585", "9957790056", "9957784575", "9957001663", "9300044573", "9957783730", "9957781751", "9300035436", "9957795526", "9957786965", "9300042715", "9969991431",
#     "9957001386", "9957001060", "9300036574", "9957782198", "9957790805", "9957793079", "9957795209", "9957775039", "9957771008", "9957797226", "9957774557", "9300104070", "9300042043", "9957797211", "9957789220", "9300019872", "9300061989", "9300024480", "9300109077", "9957774480", "9969994632", "9300010424", "9300060103", "9957798580", "9957783682", "9969993707", "9957782752", "9969990272", "9300026605", "9957770489", "9300040605", "9957773152", "9300023995", "9585933486", "9300040507", "9966991917", "9300041135", "9585938094", "9300024100", "9300044792", "9585936593", "9957001648", "9300106691", "9300036690", "9969997088", "9300027713", "9300036812", "9966993252", "9300036220", "9300035466", "9957799409", "9969990698", "9969998115", "9957782717", "9302002568", "9957798314", "9957794740", "9957771876", "9957773318", "9957786255", "9966995715", "9300014391", "9585934514", "9957772389", "9300030670", "9957792515", "9957784096", "9966996839", "9300040184", "9957001821", "9585932934", "9957001395", "9966992901", "9300067071", "9969998946", "9969996960", "9957786848", "9957770581", "9957786602", "9300035895", "9302005144", "9516731155", "9969990344", "9300017453", "9957770326", "9957770652", "9966997804", "9966996245", "9300011195", "9957772511", "9957783980", "9585935220", "9957771007", "9300015126", "9300024207", "9957771185", "9585933276", "9957789377", "9957001849", "9300031375", "9585933689", "9300039144", "9300017619", "9300031647", "9585933001", "9300104142", "9300015641", "9957784611", "9957773244", "9957001454", "9957799141", "9957002383", "9957700397", "9300018409", "9957789281", "9585933513", "9300031786", "9585942602", "9300014096", "9957792084", "9585942374", "9300012097", "9300104080", "9957771490", "9300024541", "9957781103", "9957773702", "9585936975", "9957792287", "9957794779", "9300042981", "9957773264", "9585938095", "9957774796", "9957770153", "9957001859", "9300030619", "9300043559", "9300035515", "9957783607", "9585942298", "9957781673", "9957002160", "9300044016", "9585942357", "9300013919", "9957001638", "9957799526", "9300021565", "9957774354", "9300010191", "9957771237", "9957794565", "9302000136", "9969995928", "9957001434", "9957700482", "9300020430", "9957781130", "9957794622", "9300037764", "9957797335", "9300021101", "9300013496", "9966992167", "9957771311", "9300018137", "9585934285", "9300017610", "9957786297", "9300041814", "9957700206", "9957001660", "9957789543", "9957780556", "9957772634", "9969993243", "9969993741", "9300027724", "9957781092", "9966993828", "9957001456", "9957799685", "9585942154", "9957798514", "9300018852", "9957772824", "9957787775", "9300026897", "9957780180", "9300025947", "9957001565", "9300105826", "9300025622", "9957001332", "9300019033", "9957774261", "9957001504", "9957770670", "9300037466", "9957001637", "9966998862", "9969995825", "9302002141", "9585933359", "9300015043", "9957774114", "9300018023", "9300073963", "9957001253", "9300024202", "9957782896", "9957789029", "9300016286", "9966996360", "9957782653", "9585930536", "9957789706", "9006351881", "9300071484", "9300015610", "9957001676", "9110289150", "9300027377", "9300011657", "9300042903", "9300039505", "9966993518", "9957797769", "9300026818", "9957774571", "9585933361", "9300020775", "9585935826", "9969993433", "9966994527", "9957782827", "9300043579", "9957700337", "9957001675", "9300018990", "9957784765", "9111193099", "9585936757", "9300014575", "9300013553", "9957780024", "9300091497", "9957771702", "9969995970", "9957773400", "9957783928", "9300025499", "9300018842", "9300036167", "9957771408", "9957001836", "9957770866", "9966992030", "9300026291", "9957774942", "9300040384", "9957772710", "9300027732", "9966993795", "9966995480", "9957774500", "9300024943", "9585934207", "9300042998", "9966990962", "9300020639", "9957001523", "9300014515", "9957001677", "9957788002", "9300038005", "9300024393", "9216493360", "9300038200", "9300036400", "9300012661", "9957790608", "9300037682", "9957790854", "9300038579", "9966991098", "9300025488", "9957784454", "9300035189", "9585931911", "9585931001", "9585939287", "9300028562", "9957001669", "9300027368", "9302003864", "9969991071", "9300025175", "9966990204", "9966994184", "9585939311", "9300089520", "9300015548", "9300010861", "9300030139", "9585933044", "9957784920", "9300027336", "9969997389", "9300010486", "9957002132", "9957774901", "9957795546", "9300041534", "9300019807", "9957700657", "9957001341", "9957789382", "9300014794", "9300018550", "9300016439", "9300012224", "9957773597", "9300019131", "9957001756", "9300014588", "9300018404", "9300043431", "9957789222", "9300011805", "9300040929", "9300031613", "9969994946", "9300010526", "9300035703", "9957793680", "9300035004", "9966997765", "9300025675", "9585942157", "9300024388", "9300109065", "9966997242", "9300013443", "9300038547", "9957796942", "9957784136", "9957781649", "9300023504", "9300012037", "9300039600", "9300106535", "9957794188", "9585933117", "9300017366", "9300103213", "9300042324", "9957001631", "9300034439", "9957001473", "9966991723", "9957774713", "9300038575", "9957784949", "9300027378", "9957770124", "9300040491", "9969998860", "9585936718", "9957770962", "9969993412", "9957796468", "9300010421", "9966993874", "9957787133", "9966992721", "9300014520", "9969997089", "9957784175", "9300025308", "9957799137", "9300013050", "9966992551", "9957772662", "9300102820", "9300034003", "9300015609", "9300043684", "9300031066", "9957001783", "9585933747", "9300025988", "9300030661", "9957774406", "9957001335", "9957795146", "9957788887", "9957770630", "9957789441", "9300067601", "9957002099", "9300011179", "9969992544", "9585939703", "9957002302", "9957001739", "9957773761", "9300024870", "9966995235", "9585938615", "9300011984", "9957001460", "9585938086", "9957786984", "9300041316", "9300082898", "9300011810", "9966996287", "9957784388", "9957785972", "9300027735", "9957770876", "9300044294", "9300109140", "9966998586", "9957791562", "9300068121", "9300102702", "9300011468", "9302002625", "9969996638", "9300072730", "9300038445", "9957782620", "9957001279", "9957773861", "9969991922", "9300010403", "9300014175", "9957001979", "9957771627", "9300024063", "9957796787", "9300037383", "9957793027", "9585938863", "9957782234", "9957001746", "9300041964", "9300013865", "9300011922", "9300039020", "9957789803", "9957774512", "9957001981", "9969995160", "9300044678", "9585936904", "9969991303", "9957001780", "9585936768", "9969993876", "9957772215", "9966998667", "9300017572", "9957774202", "9300037386", "9966996830", "9957700253", "9966990696", "9300043460", "9966994434", "9585936300", "9300013417", "9300037698", "9969996408", "9300016347", "9957784665", "9300041896", "9957771195", "9300024500", "9957783600", "9300062383", "9957774365", "9957790901", "9585942412", "9300026209", "9957790483", "9966995583", "9957774607", "9957789390", "9300067603", "9300036339", "9957784174", "9957794583", "9585938763", "9957001385", "9957001719", "9300022526", "9957799279", "9957794474", "9585936794", "9957773121", "9585932618", "9957786090", "9300012439", "9966995301", "9957783038", "9957790622", "9585932028", "9957001231", "9300010590", "9957792885", "9585936759", "9969992798", "9585936901", "9300013409", "9300027340", "9957788558", "9957774323", "9300042748", "9300021700", "9966993818", "9957788226", "9957772601", "9966990702", "9300071272", "9957774676", "9957794232", "9966996106", "9300043430", "9302001060", "9969995965", "9957001654", "9957770939", "9957001748", "9957780221", "9300041618", "9957001439", "9300040035", "9969995380", "9300031384", "9300105592", "9957785746", "9300023828", "9957783498", "9966991262", "9957798326", "9957785755", "9300010046", "9300013930", "9957784801", "9585932936", "9300035407", "9969992367", "9957797368", "9957771325", "9957002311", "9300011431", "9957001713", "9957700340", "9585934527", "9957780590", "9957001049", "9300021440", "9957001270", "9957781675", "9966995966", "9585937237", "9957001549", "9957796646", "9300031670", "9957775034", "9300026890", "9300019948", "9300031561", "9966991960", "9300012509", "9300038583", "9585935061", "9957774965", "9966996958", "9966997976", "9585931460", "9300014370", "9957772295", "9957783440", "9957001322", "9300017947", "9300011572", "9585939913", "9966992973", "9957774209", "9957002176", "9300015577", "9300027349", "9957780336", "9957788474", "9300100706", "9957770117", "9300089948", "9957773925", "9969994414", "9302002076", "9300039573", "9957796283", "9300017450", "9966994304", "9957001858", "9957774017", "9300069706", "9300031306", "9957001346", "9957771712", "9957794717", "9300020642", "9300061231", "9300107007", "9966991439", "9300027765", "9957001582", "9300019502", "9957790991", "9300014058", "9957794203", "9500020770", "9957772591", "9969991912", "9300021824", "9957772658", "9300012005", "9966992327", "9957772452", "9585942260", "9585938348", "9957793906", "9300024827", "9957001704", "9957774991", "9957774126", "9302002936", "9957791994", "9300020003", "9966998477", "9957001731", "9957001448", "9969990405", "9957793431", "9957792148", "9300018947", "9957782631", "9585936126", "9957781511", "9957783088", "9300070567", "9300062855", "9300012545", "9957786040", "9957795242", "9300042902", "9300043868", "9300028518", "9957781843", "9300025347", "9957789877", "9957790300", "9957772334", "9300041151", "9585931300", "9957001843", "9300023110", "9957789310", "9300031454", "9966995942", "9300035170", "9300023942", "9585939449", "9957772019", "9966994382", "9300010801", "9957796781", "9957772875", "9969998445", "9300014702", "9585938357", "9300015766", "9300091194", "9300025973", "9966993648", "9957001397", "9300035383", "9300017073", "9957774164", "9300084119", "9300065520", "9300018411", "9957001740", "9966990722", "9957700610", "9969997507", "9300043917", "9300016245", "9300040512", "9300019955", "9302003718", "9300013695", "9957001773", "9957799596", "9957789696", "9957786405", "9300035403", "9300021858", "9966993703", "9300107688", "9969998903", "9957001265", "9112565882", "9957781812", "9300042766", "9969991280", "9957794963", "9957774971", "9585942031", "9300036436", "9302009566", "9957787055", "9957783121", "9585942604", "9300014428", "9300042900", "9957784803", "9300013998", "9300010468", "9585934635", "9302003198", "9957772076", "9585931387", "9585939877", "9300031537", "9817421121", "9300014690", "9300026725", "9957771440", "9966997140", "9957790856", "9300037640", "9957789716", "9969991003", "9957001493", "9300035232", "9585931547", "9969996275", "9957783617", "9300018443", "9957774774", "9957772487", "9300043778", "9300044615", "9957774960", "9969998396", "9300020706", "9585935969", "9957001726", "9957791641", "9966996890", "9300026348", "9957793486", "9969996170", "9585942129", "9300012630", "9957772119", "9300039200", "9957780859", "9957002147", "9300107671", "9957001785", "9957001702", "9300010187", "9957001506", "9969992865", "9300018482", "9969995327", "9300031665", "9969991404", "9300012826", "9957001629", "9957799247", "9957774415", "9957781364", "9300015193", "9957788843", "9957773583", "9957770585", "9957798004", "9300043491", "9300015564", "9957782418", "9300020233", "9957001769", "9966994998", "9957771306", "9957001609", "9957001369", "9957770341", "9966992553", "9969994302", "9957793401", "9300011187", "9300028575", "9300031722", "9300015596", "9300031570", "9300042562", "9300034001", "9966996256", "9957001694", "9957790683", "9957001586", "9957001593", "9957771021", "9300010398", "9300065896", "9300028582", "9585933080", "9957793039", "9300016503", "9300031070", "9300011928", "9300010149", "9585939270", "9957001606", "9957786181", "9957781952", "9300105827", "9957789066", "9957771509", "9957771924", "9300107908", "9585931663", "9969997207", "9300012018", "9300028532", "9585932336", "9585934246", "9957774299", "9957774621", "9957789902", "9300108392", "9957782744", "9966992719", "9957774895", "9969994035", "9300025196", "9966993724", "9957773188", "9966991768", "9300040551", "9957772827", "9300020142", "9957781089", "9957796486", "9969998440", "9300012368", "9957783865", "9300042247", "9300010658", "9957793445", "9957783604", "9300017855", "9585933257", "9300042680", "9957784511", "9957775070", "9966998309", "9300031003", "9585938816", "9957002120", "9966996372", "9957796929", "9300019150", "9969991024", "9300013632", "9969992752", "9300024094", "9300096529", "9957786865", "9957789244", "9957783859", "9957001696", "9957001380", "9585931711", "9300034869", "9300042041", "9300011054", "9300019939", "9957774834", "9957001791", "9300038388", "9957770532", "9300015712", "9300043438", "9957001733", "9300030516", "9585932008", "9300023928", "9969997261", "9300034429", "9957791235", "9300040822", "9957001431", "9300010004", "9957001401", "9300103088", "9957794185", "9957771547", "9957789215", "9969997698", "9957772653", "9957771054", "9969993222", "9585942546", "9957001554", "9957700545", "9957002142", "9957781026", "9585933550", "9957782777", "9585936436", "9300017125", "9957795453", "9957771138", "9302001949", "9957785184", "9957774081", "9957780272", "9957773854", "9957773967", "9966991700", "9300027767", "9966995414", "9300011953", "9957791497", "9302003755", "9300025944", "9300043824", "9966996362", "9969990430", "9300015620", "9585939711", "9957794219", "9300025950", "9585934095", "9957001374", "9966998164", "9300019307", "9957774195", "9300044027", "9957774951", "9966992232", "9957773608", "9302002575", "9585935062", "9969994320", "9957780474", "9300062152", "9957772204", "9957773440", "9957771245", "9957001466", "9957783444", "9957792414", "9300044022", "9957774239", "9300025072", "9300027359", "9957770731", "9957785051", "9957770196", "9585933969", "9300073025", "9300100736", "9300011709", "9957791500", "9585938680", "9300011545", "9300031667", "9957772185", "9969991328", "9300020818", "9957001529", "9300013134", "9585936855", "9300030698", "9300024035", "9966995780", "9300014904", "9969994319",
#     "9957001538", "9302009565", "9957002151", "9969990978", "9300019627", "9300036602", "9300043719", "9957794437", "9300014105", "9966997939", "9957001475", "9957795816", "9300013156", "9046338295", "9300012868", "9957775037", "9957001458", "9300016495", "9957770266", "9957794022", "9300039327", "9957002362", "9957001802", "9957798958", "9585940172", "9957001354", "9957792107", "9957001318", "9957001509", "9300017181", "9300036389", "9300044536", "9957785558", "9300109746", "9969994077", "9957796402", "9300040927", "9585933002", "9957774907", "9957001655", "9300022862", "9957002348", "9300019550", "9300017687", "9957792822", "9957001389", "9585939626", "9300030359", "9300011645", "9302005946", "9957790081", "9300061921", "9957781929", "9957796692", "9300013953", "9302004580", "9300017853", "9957002354", "9300020268", "9300025143", "9957797616", "9585942185", "9585939360", "9957001469", "9300029733", "9300019302", "9300010525", "9300040946", "9300040830", "9957001353", "9957774832", "9969996082", "9957770059", "9300067658", "9957774382", "9585938096", "9957795571", "9957798286", "9957001544", "9966990136", "9300016345", "9957771586", "9300043537", "9300022556", "9300024078", "9585931567", "9957001437", "9300034625", "9300026612", "9957774537", "9957001234", "9957002346", "9957001531", "9957791563", "9957001409", "9957771128", "9300012573", "9957001514", "9966991623", "9300030354", "9957790855", "9300018938", "9957783166", "9957791203", "9957001457", "9300017175", "9957001789", "9300014669", "9585936843", "9300030229", "9300039244", "9957772402", "9300024099", "9957784440", "9957790575", "9300024909", "9966993839", "9966990021", "9957001570", "9957001647", "9957001464", "9969997669", "9957798125", "9969996832", "9957001425", "9957789283", "9300061072", "9300013138", "9300019090", "9300090750", "9957784596", "9300071699", "9585936717", "9300015508", "9957788281", "9585939399", "9957794941", "9585933221", "9300020302", "9300042045", "9957794367", "9300028505", "9957798439", "9969996166", "9957001058", "9300012451", "9966992409", "9300041680", "9957774793", "9300104179", "9300035684", "9300018971", "9585932775", "9957700109", "9957797907", "9957770061", "9966994856", "9300014411", "9969990489", "9957770958", "9302003744", "9302005547", "9957774876", "9957795285", "9957798645", "9300095074", "9957782402", "9957794378", "9966993816", "9300020405", "9585933007", "9300027395", "9966991595", "9957774582", "9957781201", "9585932900", "9969993686", "9957002315", "9300093291", "9966990364", "9300035317", "9966995126", "9957771316", "9300015655", "9966992450", "9957774431", "9957774954", "9300028309", "9957788296", "9585931331", "9969992943", "9957782061", "9957795181", "9966995197", "9300027530", "9969998392", "9957787744", "9957784389", "9957700126", "9957788559", "9300041601", "9957794250", "9300016964", "9969992806", "9966994492", "9300030393", "9585934300", "9966996521", "9957793088", "9300021820", "9966995028", "9300011520", "9300027784", "9300015794", "9300040535", "9585931433", "9957793035", "9957001251", "9957796894", "9300024877", "9957775080", "9300017413", "9300012535", "9957001792", "9300044979", "9300038546", "9300038110", "9957774744", "9300026314", "9957771820", "9300016545", "9300018931", "9300041815", "9969996187", "9957796695", "9957794228", "9300026911", "9957770827", "9300034103", "9585936049", "9957770995", "9957785088", "9585932127", "9300025368", "9957772480", "9585934080", "9966991840", "9957785452", "9957773944", "9300027739", "9966991981", "9966992778", "9300035318", "9966990803", "9957787751", "9957700659", "9300019756", "9969997661", "9969995759", "9957794915", "9300011819", "9957792821", "9957795679", "9957792324", "9966996554", "9585933932", "9957773138", "9300013917", "9969993216", "9052632101", "9300042192", "9957700589", "9957795051", "9957770108", "9957773289", "9300020512", "9966997076", "9957781101", "9957785723", "9966996905", "9585936996", "9957773708", "9585936747", "9585932100", "9957785719", "9957001798", "9300104388", "9300025421", "9969992436", "9957788996", "9300036986", "9957001294", "9957773664", "9957789697", "9300025662", "9969997783", "9966992944", "9969996654", "9300010186", "9957781444", "9957772622", "9300030616", "9300020231", "9957798294", "9957794341", "9957787653", "9957782566", "9957788343", "9302008780", "9969992719", "9957799064", "9969992480", "9300100848", "9966991421", "9969994323", "9966996143", "9300027371", "9957791832", "9300017441", "9585936787", "9957786867", "9957770293", "9585934484", "9300027712", "9585938558", "9966992457", "9585934106", "9957001349", "9966996460", "9957789250", "9957790680", "9957789420", "9957700554", "9957773950", "9300083534", "9300034435", "9957796102", "9957789262", "9957001850", "9957700475", "9957001543", "9957785211", "9966995267", "9585932651", "9957001852", "9957798426", "9957780563", "9300015777", "9300017421", "9300040152", "9300013092", "9300024527", "9302009290", "9300040770", "9957796757", "9302002094", "9300019126", "9966991698", "9585933878", "9300018090", "9300015503", "9300036377", "9969993768", "9585936962", "9957788475", "9300031506", "9300093970", "9957002393", "9300042252", "9300019762", "9300012704", "9585932026", "9957774706", "9957770894", "9957002194", "9300014888", "9300028440", "9957773736", "9300038973", "9300015192", "9957780104", "9585936789", "9957001436", "9300044903", "9966991979", "9969994833", "9966995944", "9300024683", "9300036356", "9966994778", "9300025494", "9957781530", "9300103160", "9969993450", "9585936483", "9300034491", "9957774603", "9585936779", "9957772212", "9966995453", "9969996556", "9957789381", "9957786488", "9300042614", "9966992692", "9957773739", "9957773284", "9957771662", "9969995240", "9300036552", "9957775025", "9300010068", "9300082301", "9585942219", "9300020510", "9957785125", "9957780740", "9969995135", "9300042619", "9957786585", "9300011772", "9585938722", "9300098962", "9300062015", "9302009497", "9585936751", "9300024502", "9966990639", "9966998431", "9957789383", "9966998458", "9585936546", "9300027050", "9300016131", "9300036335", "9300025274", "9300038662", "9957770179", "9300025530", "9585936003", "9300040134", "9300026902", "9300014620", "9957775120", "9957002320", "9957774559", "9957001449", "9966994330", "9300010566", "9500050880", "9966998414", "9957785571", "9300014623", "9300036070", "9966990598", "9966995720", "9957782020", "9957774894", "9300037737", "9585934342", "9957774372", "9300012281", "9957786032", "9585933209", "9300024330", "9300042687", "9957001317", "9585936715", "9300019909", "9300065130", "9300020759", "9300038976", "9300041846", "9585936988", "9300012447", "9300031559", "9957002359", "9300010302", "9585933020", "9300082624", "9300042038", "9300037364", "9957789452", "9957789903", "9957774059", "9957002318", "9300018840", "9300019300", "9957001758", "9957775021", "9969993676", "9957791178", "9300017791", "9957001502", "9957001486", "9300019980", "9957795294", "9300015882", "9969992922", "9300011955", "9300019349", "9300065351", "9300020271", "9585936132", "9957773199", "9300024093", "9585942386", "9300042400", "9957002146", "9957783995", "9966992514", "9957001310", "9300027303", "9957774479", "9300043747", "9957791429", "9957771412", "9300023963", "9957773844", "9585935236", "9966995236", "9957795683", "9966997020", "9957774041", "9966995520", "9300012706", "9300020260", "9300019910", "9957001709", "9957002116", "9957771329", "9957001568", "9585931890", "9300030353", "9957001782", "9957785747", "9966990851", "9300010989", "9969998523", "9300043898", "9957001314", "9957001410", "9300010931", "9300043793", "9969995903", "9957002177", "9957001324", "9957780548", "9300019081", "9966995708", "9957772678", "9957774463", "9300031077", "9957001810", "9300024098", "9300035644", "9957002135", "9957793316", "9957772153", "9957784524", "9300025484", "9300037407", "9300027321", "9300044391", "9957001846", "9585931434", "9957770824", "9966996624", "9957785178", "9969992575", "9957770631", "9966993601", "9957774783", "9957783433", "9957794995", "9300011215", "9957795010", "9300030380", "9957001816", "9957001232", "9957002394", "9957798463", "9957789546", "9957787983", "9302002887", "9300010560", "9966993082", "9957774183", "9966997045", "9957785891", "9585936642", "9300010657", "9112299649", "9300021044", "9585933804", "9957792008", "9957794674", "9957771993", "9585936634", "9957785640", "9300026301", "9300030133", "9300030217", "9300041608", "9300013120", "9300016905", "9969997530", "9957793054", "9957001672", "9300012126", "9300028103", "9966993255", "9585935595", "9957792317", "9300092672", "9300013750", "9300014368", "9300015897", "9957001498", "9585936500", "9957771802", "9300019701", "9957773055", "9957001682", "9585936729", "9957001569", "9300027764", "9585935983", "9969992170", "9966991267", "9957772475", "9957772728", "9957780059", "9300036821", "9300015990", "9300011026", "9585936808", "9300024001", "9585932736", "9300028023", "9957001203", "9585938824", "9966996230", "9300103008", "9300041095", "9966990729", "9957799565", "9300038780", "9957793785", "9300016320", "9300036923", "9957788394", "9957774119", "9585934953", "9957001323", "9957794551", "9957795494", "9966992618", "9957781855", "9957770158", "9957793948", "9302003797", "9300017838", "9957787190", "9300036243", "9300016782", "9957772713", "9300094319", "9585935661", "9585931790", "9300026942", "9300041835", "9957774596", "9585935995", "9969997981", "9957772196", "9585937217", "9300022799", "9957773206", "9957002341", "9300071916", "9966995292", "9255999025", "9857726572", "9312444924", "9262733267", "9300062680", "9111151115", "9772659817", "9154174711", "9778551719", "9112446693", "9067477002", "9857540081", "9650849410", "9771221039", "9263612582", "9150972344", "9852288002", "9165483688", "9852483646", "9036286132", "9300073938", "9300038406", "9032156633", "9957007007", "9166315112", "9300017782", "9300090818", "9671597147", "9953456666", "9300037202", "9213960677", "9150764130", "9817776441", "9057467040", "9522054919", "9957799043", "9852728421", "9162540170", "9778973050", "9957794851", "9265111300", "9175774299", "9957001917", "9251702780", "9300031373", "9639628800", "9302003704", "9153123920", "9650509309", "9919159893", "9957781518", "9168872082", "9254868989", "9031299104", "9175864409", "9036192929", "9302003938", "9119952693", "9214144203", "9585940074", "9300067313", "9032156635", "9660754979", "9264723272", "9213994875", "9969993098", "9259242525", "9818192325", "9300036631", "9853684262", "9062772720", "9950010029", "9055059277", "9585930901", "9217447336", "9300035704", "9055419804", "9300098806", "9215556711", "9111995511", "9817418873", "9685686886", "9119426610", "9214322767", "9650911988", "9043389431", "9618000799", "9533569559", "9300071320", "9992093354", "9967735449", "9060719308", "9300067112", "9031798273", "9772813302", "9162980403", "9091644221", "9036222000", "9857801050", "9111503000", "9300108757", "9637800989", "9522213295", "9300105987", "9670825990", "9312973308", "9165056728", "9650001557", "9312889914", "9950010028", "9164464460", "9099549129", "9217520559", "9300034390", "9031354050", "9300092879", "9166285105", "9969991521", "9261464701", "9300018402", "9778529201", "9778330346", "9910083844", "9966997052", "9031547900", "9175391733", "9851681810", "9219842381", "9055444884", "9999895726", "9045534049", "9992070504", "9161854780", "9910034858", "9055690347", "9164397224", "9997685215", "9162784141", "9957001923", "9957779800", "9585942800", "9165234568", "9522452820", "9163751828", "9299640539", "9500494075", "9647083333", "9585940108", "9950010023", "9151012249", "9999871209", "9818396279", "9533444010", "9218602945", "9645007700", "9853168600", "9522267980", "9150000206", "9153069796", "9819089546", "9160828037", "9300028516", "9585930814", "9111404188", "9300098063", "9300028501", "9266890627", "9774440292", "9175924239", "9957077077", "9633483686", "9811084282", "9258498577", "9164536110", "9300012855", "9852347602", "9300108584", "9858068187", "9522097624", "9852435461", "9262799197", "9215502832", "9647969838", "9099228763", "9585938789", "9957001841", "9119216270", "9853456666", "9215864679", "9046387918", "9265200887", "9300060985", "9163830549", "9957778515", "9095866646", "9295694596", "9661312383", "9776000200", "9300074201", "9300035808", "9214264732", "9671584168", "9671363624", "9300069946", "9585940073", "9267122141", "9773779797", "9300028547", "9300069305", "9096507203", "9680203223", "9995551099", "9671180444", "9853193013", "9119307679", "9252246223", "9851975351", "9300028557", "9300102561", "9643648266", "9119142068", "9153642017", "9818854332", "9957001955", "9633447523", "9671584099", "9032490900", "9168227764", "9995260706", "9067226824", "9652493737", "9266226734", "9654394055", "9950010045", "9154703656", "9533703662", "9261585528", "9162814987", "9166951425", "9689036249", "9957001935", "9950010025", "9643748399", "9627202010", "9160808856", "9166603395", "9300064955", "9057004264", "9957001883", "9295795724", "9650011888", "9853088047", "9052712880", "9152284499", "9057751972", "9670631350", "9264683095", "9585930994", "9660624455", "9500123387", "9163949149", "9111345891", "9119414877", "9966997798", "9216488450", "9057537291", "9996764169", "9263578897", "9653005864", "9688313302", "9300010387", "9111623000", "9966994423", "9670760001", "9263366899", "9211804660", "9269411777", "9859915888", "9859201775", "9218711865", "9506644665", "9219824822", "9111471631", "9152955104", "9950010053", "9266358317", "9516505895", "9300072920", "9160593176", "9165750755", "9778278178", "9957001914", "9585940122", "9300097903", "9263901690", "9778080137", "9778098276", "9213154015", "9651443788", "9913999779", "9585940069", "9585930989", "9111114747", "9300037402", "9300061903", "9269061113", "9006477864", "9162646058", "9857640792", "9300063228", "9300089930", "9300029601", "9957001920", "9119304599", "9300018519", "9257838380",
#     "9852384133", "9859902523", "9777327907", "9017989727", "9213266133", "9104197152", "9057146385", "9302004513", "9213118183", "9263735675", "9264367928", "9819142639", "9030179017", "9006507754", "9164217955", "9778332217", "9778787321", "9300028185", "9295006671", "9633496749", "9163460655", "9957797394", "9585940131", "9112450710", "9998681101", "9300092921", "9035437736", "9254465334", "9300031532", "9165719729", "9778005885", "9006339495", "9169955585", "9778873977", "9685275884", "9998798505", "9112329335", "9300025008", "9117522145", "9163956332", "9852554592", "9950010035", "9154207160", "9647163846", "9651928610", "9300064143", "9168345324", "9300062432", "9213220892", "9219996633", "9300107107", "9859554200", "9257044773", "9819862752", "9859879765", "9859059660", "9052786174", "9778575770", "9300082438", "9166703088", "9258755655", "9300109583", "9263799322", "9055722539", "9037633364", "9104551515", "9253050705", "9302000393", "9851891489", "9251616362", "9637185318", "9269310055", "9163654670", "9112754588", "9167712530", "9850687222", "9160368018", "9152405929", "9296049409", "9859270977", "9296739083", "9253573867", "9672506065", "9999852580", "9112600199", "9169249717", "9104832844", "9154545420", "9037528939", "9219055470", "9060344872", "9175268074", "9776959007", "9300028522", "9167308951", "9310024317", "9969995323", "9213099220", "9652494747", "9217593739", "9165755806", "9300062726", "9500417596", "9055265632", "9302004707", "9267361757", "9267833790", "9957001007", "9257104443", "9032025648", "9585940007", "9153573825", "9522601030", "9302006223", "9057528151", "9302003940", "9300092890", "9957780112", "9152228368", "9585940077", "9992191142", "9031597673", "9773020895", "9015552099", "9300073940", "9300109873", "9191095965", "9856262296", "9957001893", "9531657957", "9006242420", "9154204300", "9300061577", "9300039036", "9779427106", "9998991809", "9046450304", "9585942803", "9300028543", "9036196662", "9585940083", "9165371550", "9269017680", "9300032503", "9035937950", "9637741174", "9300018594", "9152946032", "9265219121", "9858824130", "9099390152", "9652093224", "9260644260", "9817146174", "9264829715", "9957077707", "9052693520", "9032522777", "9218846897", "9162050424", "9169998020", "9161491610", "9969995963", "9680356858", "9300109029", "9300105430", "9645087479", "9266008212", "9031424820", "9213898265", "9818769070", "9633136157", "9219202520", "9992391106", "9057777156", "9300064272", "9300089181", "9523932264", "9253578955", "9302009188", "9300014923", "9263730358", "9319807565", "9269840983", "9164517484", "9119550005", "9300028523", "9300012158", "9778171785", "9651273647", "9163612767", "9032336636", "9169228215", "9175239384", "9585939069", "9164148090", "9251748451", "9300034976", "9697286402", "9585940070", "9152760581", "9213694327", "9969997302", "9778189860", "9585930909", "9152930053", "9154224799", "9164562520", "9300060595", "9302001468", "9778825253", "9152488315", "9260973294", "9818519119", "9266648693", "9037870488", "9300037410", "9300028553", "9036861818", "9910005888", "9811665092", "9999897798", "9300037448", "9035078870", "9219619351", "9213221010", "9039656331", "9031158843", "9957797902", "9772675207", "9261509200", "9261640332", "9300108790", "9858638554", "9636106855", "9045554428", "9602829393", "9651040008", "9151091311", "9645516969", "9300069198", "9300072174", "9151740005", "9313646210", "9262288599", "9778029899", "9300108530", "9265653768", "9052843266", "9300067027", "9992471009", "9670775665", "9214017084", "9950010036", "9267266805", "9522607052", "9957791196", "9300060907", "9312881321", "9779370989", "9774908314", "9250591361", "9857006111", "9251939006", "9269872156", "9099027520", "9312620756", "9777708277", "9300072884", "9910010158", "9851990256", "9643234520", "9160305070", "9853469020", "9647994252", "9099772016", "9057629409", "9119547235", "9100022600", "9302000317", "9302002564", "9998106059", "9645121162", "9300028546", "9300109842", "9300036375", "9618084834", "9258584714", "9778742602", "9531524430", "9300036374", "9688227675", "9688063029", "9957791265", "9161970091", "9154570996", "9300034535", "9269387026", "9013001019", "9811668139", "9778330364", "9522301122", "9262096788", "9302003935", "9269751159", "9251548282", "9300089896", "9300108241", "9213820509", "9046411900", "9300035898", "9216458141", "9152842599", "9531630075", "9966992863", "9774146801", "9302000477", "9251551562", "9153445856", "9516877852", "9167816855", "9859350555", "9651623188", "9854560457", "9218646494", "9302001246", "9633213283", "9166551882", "9779905066", "9112122220", "9166929797", "9036877658", "9623630633", "9213123835", "9616120808", "9775054587", "9099390150", "9031722355", "9657733132", "9057428418", "9104328706", "9522687940", "9300092901", "9585930822", "9153929829", "9265359884", "9164441164", "9296636800", "9300075130", "9300038346", "9957780613", "9300106110", "9037106767", "9778269115", "9060870811", "9522724277", "9300090125", "9969992859", "9119950117", "9163279239", "9265967277", "9217639995", "9817849313", "9816885702", "9684966319", "9660075449", "9104949664", "9300039603", "9639751717", "9255142500", "9859222999", "9300095301", "9067052652", "9162933070", "9688423427", "9151895898", "9300073975", "9779396390", "9163588358", "9267650529", "9991110810", "9999611686", "9774506771", "9175356574", "9516550756", "9966990721", "9950010024", "9300062858", "9167234147", "9300018504", "9774255473", "9250724310", "9772813301", "9957001947", "9300036643", "9999971219", "9269098075", "9522751004", "9045519127", "9099064947", "9300064757", "9268905199", "9966994586", "9319643779", "9045557785", "9773445399", "9163646096", "9300061430", "9261775916", "9263790199", "9163023630", "9300108602", "9291058779", "9811248675", "9300063507", "9300038956", "9264723634", "9859723226", "9218602223", "9646416461", "9778639093", "9957001950", "9680177512", "9264001315", "9819477943", "9300038821", "9300069959", "9166959659", "9300107384", "9998962800", "9688618815", "9778989151", "9218971810", "9516680464", "9660006002", "9300107640", "9299947079", "9302001664", "9629361825", "9262369267", "9057444597", "9957783684", "9778493544", "9110904006", "9112487713", "9250950002", "9265299663", "9057269504", "9300018535", "9998296055", "9957001954", "9778770720", "9035787539", "9990998758", "9213374285", "9660633177", "9818887824", "9099229650", "9653227484", "9254227656", "9161492888", "9811430240", "9266729510", "9300089161", "9032166952", "9265923153", "9654332216", "9957781746", "9035163752", "9167786878", "9267923420", "9300027669", "9663289819", "9629345036", "9219102277", "9650071613", "9300031716", "9811729105", "9259333211", "9585942806", "9265592678", "9194110011", "9300107122", "9300104132", "9957002088", "9300036460", "9167369174", "9062706402", "9254347164", "9637260254", "9689869898", "9163555080", "9957001988", "9300039019", "9062665892", "9261046664", "9258550405", "9250540300", "9969992502", "9657505544", "9859663821", "9500229966", "9773182390", "9969990951", "9150862516", "9585940055", "9260741200", "9153057110", "9036644242", "9300061277", "9300108685", "9006225080", "9110340841", "9264498885", "9969996200", "9819809843", "9300037866", "9267302361", "9150003161", "9818876912", "9857803863", "9266450860", "9300069332", "9112908275", "9852288069", "9859797474", "9265467636", "9260344931", "9585930815", "9969996359", "9261770660", "9300100933", "9057841721", "9055352726", "9100891690", "9772503972", "9969995487", "9778802924", "9052321476", "9523773178", "9269371075", "9302009541", "9312503635", "9852559797", "9057661632", "9645969638", "9302004319", "9859226153", "9169243085", "9300034981", "9957001910", "9219245203", "9910165191", "9099395454", "9295257683", "9300010321", "9300028996", "9300109362", "9999691330", "9163435052", "9067960353", "9650444653", "9300038937", "9265360565", "9313050649", "9300028548", "9197277057", "9164215405", "9302000906", "9779987777", "9030197636", "9261441717", "9300108684", "9992004414", "9300078172", "9112955703", "9950010034", "9851609233", "9300104124", "9112276365", "9035418930", "9300019915", "9819787775", "9052197867", "9254544188", "9502240304", "9300098438", "9687905573", "9267300724", "9998219527", "9967612804", "9261558564", "9067777719", "9213720808", "9500270268", "9957007000", "9998718787", "9259045567", "9774595140", "9969994667", "9999293848", "9627234845", "9262253860", "9957787918", "9110887210", "9966995402", "9119011036", "9217658055", "9300070257", "9262782935", "9533445357", "9300102724", "9112974489", "9265738955", "9251877002", "9671970705", "9260870778", "9313072553", "9653651725", "9302003043", "9534101708", "9266144876", "9672822734", "9957001880", "9516666253", "9261377517", "9266060419", "9652290872", "9500006689", "9057175054", "9151574629", "9300020019", "9671993449", "9663031615", "9300100984", "9300017232", "9111104700", "9015220222", "9197665709", "9302001405", "9258867451", "9671977649", "9300105056", "9998543664", "9957001912", "9969994552", "9957786739", "9052786168", "9653250520", "9295508616", "9957788830", "9300062790", "9772721756", "9250314889", "9175714724", "9035564920", "9778348454", "9257251836", "9163048332", "9300041350", "9213016391", "9302005922", "9688449450", "9522611859", "9969998481", "9645017997", "9957001957", "9966995319", "9255818330", "9266755705",
# ])


CHANGE_NUMBER_ENABLED_MSISDNS = set([
    '9800550013',
    # '9957078098',
    # '9581234567', '9581111111',
    # '9588998800', '9585940007', '9957775373',
    # '9957074917', '9585942020', '9585942121',
])


class UserInfoHandler(AuthHandler):

    WIFI_PARTNERS = None

    def _post(self):
        self._save_web_headers()
        caller_registration(self.client, self.db_session)

        answer = {
            'operator': self.client.operator,
            'region': self.client.region,
        }

        sbt_huawei_registration(
            self.client, self.db_session,
            device=self.device,
        )
        answer.update(self._get_caller_data())

        answer.update(self._action_data())
        answer.update(self._app_config_data())
        answer.update(self._get_license_fee_data())
        answer.update(self._sbt_data())
        answer.update(self._tariff_banner())

        answer.update(get_need_update_app(self.data.get('app')) or {})

        mnp_token = self.db_session.query(ClientToken.token).filter_by(
            client_id=self.client_id,
            status=ClientToken.STATUS_CONFIRMED,
            code=ClientToken.CODE_MNP_ORDER,
            deleted=None,
        ).order_by(
            ClientToken.time_created.desc()
        ).first()
        if mnp_token:
            answer['mnpOrderStatusToken'] = mnp_token.token

        return answer

    @property
    @memorizing
    def _db_last_info(self):
        return self.db_session.query(UserInfo).filter_by(
            client_id=self.client_id
        ).order_by(UserInfo.id.desc()).first()

    def _get_license_fee_data(self):
        if self._db_last_info is None:
            return {}
        return {
            "fee": self._db_last_info.fee
        }

    def _get_caller_data(self):
        caller_data = {}

        if self.device.os == 'web':
            return caller_data

        if (
                self.device and
                LooseVersion(self.device.app_version or '0') >= LooseVersion('1.0')
        ):
            if (
                    self.client.get_data('caller_login_s') is not None and
                    self.client.get_data('caller_password_s') is not None
            ):
                caller_data['caller_login'] = self.client.get_data('caller_login_s')
                caller_data['caller_password'] = self.client.get_data('caller_password_s')
        else:
            if (
                    self.client.get_data('caller_login') is not None and
                    self.client.get_data('caller_password') is not None
            ):
                caller_data['caller_login'] = self.client.get_data('caller_login')
                caller_data['caller_password'] = self.client.get_data('caller_password')

        if is_wifi_available_for_client(self.client):
            sbt_huawei_pass = self.db_session.query(SbtHuaweiPassword).filter(
                SbtHuaweiPassword.client_id == self.client.number,
                SbtHuaweiPassword.deleted == None
            ).order_by(SbtHuaweiPassword.id.desc()).first()

            if sbt_huawei_pass:
                caller_data['caller_login_h'] = self.client.get_data('caller_login_h')
                caller_data['caller_password_h'] = sbt_huawei_pass.password
            elif (
                    self.client.get_data('caller_login_h') is not None and
                    self.client.get_data('caller_password_h') is not None
            ):
                caller_data['caller_login_h'] = self.client.get_data('caller_login_h')
                caller_data['caller_password_h'] = self.client.get_data('caller_password_h')

        return caller_data

    def _save_web_headers(self):
        if self.device.os == 'web':
            try:
                self.device.web_headers = {
                    'User-Agent': self.request.headers.get('User-Agent', ''),
                    'Referer': self.request.headers.get('Referer', ''),
                    'Ip': self.request.headers.get('X-Real-Ip', ''),
                }
                self.db_session.commit()
            except Exception as err:
                print(err, traceback.format_exc())
                try:
                    self.db_session.rollback()
                except Exception as err:
                    pass

    def _action_data(self):
        action = self.db_session.query(Action).filter(
            Action.operator == self.client.operator,
            Action.region == self.client.region,
            Action.deleted == None,
            sa_or(
                Action.expired == None,
                Action.expired >= datetime.datetime.utcnow(),
            )
        ).order_by(Action.created).first()

        if action:
            return {
                "action": {
                    "action_id": action.action_id,
                    "name": action.title,
                    "text": action.text,
                    "exp": action.expired_timestamp,
                    "url": action.url,
                    "icon": action.icon,
                    "scenes": action.scenes,
                    "params": action.get_params(self.device),
                    "show_times": action.show_times,
                }
            }
        return {}

    def _try_update_subscriber(self):
        subscriber = self.db_session.query(Subscriber).filter_by(
            client_id=self.client.number, deleted=None,
        ).order_by(Subscriber.id.desc()).first()

        if not subscriber:
            print("not subscriber")
            return None

        sbt_api = sbTelecomApi(
            client=self.client,
            clientId=subscriber.clientId,
            subscriberId=subscriber.subscriberId,
            db_session=self.db_session,
            is_safe_requests=True
        )
        if not sbt_api.isActive:
            print("not api.isActive")
            return None

        utcnow = datetime.datetime.utcnow()

        subscriber_data = sbt_api.subscriberData()
        new_number = subscriber_data["subscriberBaseParameters"]["msisdn"]

        cl = self.db_session.query(Client).filter_by(number=new_number).first()

        if cl is None:
            cl = Client(number=new_number)
            cl.region, cl.operator = get_reg_op(cl.number, self.db_session)

        cl.password = self.client.password
        cl.password_lk = self.client.password_lk
        cl.pass_correct = self.client.pass_correct
        cl.pass_correct_new = self.client.pass_correct_new
        self.db_session.add(cl)

        api_reg = SbtApiReg(client_id=cl.number, device_id=self.device_uid)
        api_reg.password = cl.password_lk
        api_reg.save(self.db_session, commit=False)

        for _cl_token in self.db_session.query(ClientToken).outerjoin(
            DeviceData, sa_and(
                DeviceData.token == ClientToken.token,
                DeviceData.device_id == self.device.device_id,
            )
        ).distinct(ClientToken.token).filter(
            DeviceData.id == None,
            sa_or(
                ClientToken.client_id == cl.number,
                ClientToken.client_id == self.client_id,
            ),
            ClientToken.token != self.token,
            ClientToken.code == self.client_token.code,
            ClientToken.deleted == None,
        ).order_by(ClientToken.token).all():
            _cl_token.deleted = utcnow

        cl_token = ClientToken(
            client_id=cl.number,
            token=str(uuid.uuid4()).replace('-', ''),
            status=self.client_token.status,
            code=self.client_token.code,
        )
        cl_token.password = self.client_token.password
        self.db_session.add(cl_token)

        device = DeviceData(
            client_id=cl.number,
            token=cl_token.token,
            device_id=self.device.device_id,
            os=self.device.os,
            data=self.device.data,
        )
        device.refresh_optimizer = None
        self.db_session.add(device)

        subscriber.deleted = utcnow
        db_subscriber = self.db_session.query(Subscriber).filter_by(
            client_id=cl.number,
            subs_id=subscriber.subs_id,
            deleted=None,
        ).first()

        if db_subscriber is None:
            db_subscriber = Subscriber(client_id=cl.number)
            db_subscriber.subscriberId = sbt_api.subscriberId
            db_subscriber.clientId = sbt_api.clientId
            db_subscriber.save(self.db_session)

        autopays = self.db_session.query(AutoPay).filter_by(
            client_id=self.client.number, deleted=None,
        ).all()
        for autopay in autopays:
            autopay.delete(self.db_session)

        autopups = self.db_session.query(AutoPup).filter_by(
            client_id=self.client.number, deleted=None,
        ).all()
        for autopup in autopups:
            autopup.delete(self.db_session)

        return cl_token.token, cl.number

    def _sbt_data(self):
        sbt_data = {}
        if not self.client.has_sbtelecom_operator:
            screens = self.get_app_screens()
            if screens:
                sbt_data['screens'] = screens
            sbt_data['hideChangeNumberSection'] = True
            sbt_data['suggestChangeNumber'] = False
            return sbt_data

        sbt_api = sbTelecomApi(
            client=self.client,
            db_session=self.db_session,
            is_safe_requests=True,
        )

        if (
                self.number not in TEST_SBT_USERS and
                not sbt_api.isActive or
                self.number == '9581111111'
        ):
            new_token, new_number = self._try_update_subscriber() or (None, None)
            print(new_token, new_number)
            if new_token:
                sbt_data["update"] = {
                    "token": new_token,
                    "number": new_number,
                }
                print(sbt_data)
                return sbt_data
            else:
                return {
                    'result': 0,
                    'error': 'auth_error',
                    'error_text': 'wrong password'
                }

        sbt_connector = sbTelecomConnector(self.client)
        sbt_connector.login_client(
            self.client, db_session=self.db_session,
            autologin=True, api=sbt_api
        )

        tariff_mapping_obj = sbt_connector._get_current_tariff(need_obj=True)
        if (
                tariff_mapping_obj is None and
                self._db_last_info and self._db_last_info.name
        ):
            tariff_mapping_obj = sbt_connector.cl_tariffs_by_old_name.get(
                self._db_last_info.name
            )

        added_packages_ids = []
        if tariff_mapping_obj:
            content_options = copy.deepcopy(tariff_mapping_obj.content_options)

            if self.number == '9581111111':
                for co in content_options:
                    # co['default_active'] = True
                    co['active'] = True
            else:
                added_packages = sbt_connector.get_additional_packages() or []
                added_packages_ids = [int(ap['id']) for ap in added_packages]

                if sbt_connector.get_client_errors() and not added_packages_ids:
                    content_options = []
                else:
                    content_options = [
                        co for co in content_options
                        if co['id'] in added_packages_ids or co.get('available')
                    ]

                    for co in content_options:
                        if co['id'] in added_packages_ids:
                            co['active'] = True
                            if not co['available']:
                                co['available'] = True
                                co['changeable'] = True
                        else:
                            co['active'] = False
                            if co['default_active']:
                                # co['default_active'] = False
                                co['changeable'] = True

            # print('tariff_mapping_obj', tariff_mapping_obj)
            sbt_data['fee'] = tariff_mapping_obj.license_fee
            sbt_data['tariff'] = tariff_mapping_obj.new_name

            info_url = SBT_BASE_TARIFF_PDF.get((
                self.client.region, tariff_mapping_obj.segment
            ), SBT_BASE_TARIFF_PDF.get(self.client.region))

            if not info_url:
                if is_full_sbt_client(self.client):
                    info_url = SBT_BASE_TARIFF_PDF['full']
                else:
                    info_url = SBT_BASE_TARIFF_PDF['medium']

            services = []
            for service_data in tariff_mapping_obj.free_services:
                services.append({
                    "name": service_data['name'],
                    "package_type": 'app',
                    "free": True
                })
            services = services or None
            is_wow = self.client.number == '9581234567'
            alert_text_key = ''
            if tariff_mapping_obj.is_favourite_segment:
                sbt_data['favouritesPlanInfo'] = {
                    "name": tariff_mapping_obj.new_name,
                    "info_url": info_url,
                    "fee": tariff_mapping_obj.license_fee,
                    "next_fee": (
                        tariff_mapping_obj.billing_data.get('end_interval_dt') and
                        tariff_mapping_obj.billing_data['end_interval_dt'].strftime(
                            '%Y-%m-%d'
                        )
                    ),
                    "options": content_options,
                    "added_packages_ids": added_packages_ids,
                    "fee_cashback": tariff_mapping_obj.fee_cashback,
                    "changeable": tariff_mapping_obj.changeable,
                    "services": services,
                    'isWow': is_wow,
                }
                alert_text_key = 'favouritesPlanInfo'
            elif tariff_mapping_obj.is_migrant_segment:
                sbt_data['touristPlanInfo'] = {
                    "name": tariff_mapping_obj.new_name,
                    "info_url": info_url,
                    "fee": tariff_mapping_obj.license_fee,
                    "next_fee": (
                        tariff_mapping_obj.billing_data.get('end_interval_dt') and
                        tariff_mapping_obj.billing_data['end_interval_dt'].strftime(
                            '%Y-%m-%d'
                        )
                    ),
                    "options": content_options,
                    "fee_cashback": tariff_mapping_obj.fee_cashback,
                    "changeable": tariff_mapping_obj.changeable,
                    "services": services,
                    'isWow': is_wow,
                }
                alert_text_key = 'touristPlanInfo'
            elif tariff_mapping_obj.need_plan_info:
                sbt_data['planInfo'] = {
                    "name": tariff_mapping_obj.new_name,
                    "info_url": info_url,
                    "fee": tariff_mapping_obj.license_fee,
                    "next_fee": (
                        tariff_mapping_obj.billing_data.get('end_interval_dt') and
                        tariff_mapping_obj.billing_data['end_interval_dt'].strftime(
                            '%Y-%m-%d'
                        )
                    ),
                    "options": content_options,
                    "fee_cashback": tariff_mapping_obj.fee_cashback,
                    "changeable": tariff_mapping_obj.changeable,
                    "services": services,
                    'isWow': is_wow,
                }
                alert_text_key = 'planInfo'

            if alert_text_key:
                try:
                    if alert_text_key not in sbt_data:
                        sbt_data[alert_text_key] = {}
                    if tariff_mapping_obj.id in [1529, 1701, 1702, 1703, 1704]:
                        print('alerts {}: {}, {}'.format(
                            self.client_id,
                            datetime.datetime.utcnow(),
                            alert_text_key,
                        ))
                        print('tariff_mapping_obj', tariff_mapping_obj)
                        dt = tariff_mapping_obj.billing_data.get('end_interval_dt')
                        next_fee_text = dt and u'Пакеты трафика обновятся {}'.format(
                            dt.strftime(
                                '%d.%m.%Y'
                            )
                        )
                        alert_text = u'Ежемесячно будет списываться комиссия за пакет услуг "{}" и за новый тарифный план'
                        description = alert_text.format(
                            tariff_mapping_obj.name
                        )
                        alert_data = {
                            'onSubmit': {
                                'title': u'Бесплатные минуты, ГБ и SMS станут недоступны при смене тарифа',
                                'description': description,
                                'cancelBtn': u'Не менять тариф',
                                'confirmBtn': u'Выбрать новый',
                            }
                        }
                        sbt_data[alert_text_key].update(
                            {
                                'tariffSettingsAlert': alert_data,
                                'findPlanAlert': alert_data,
                                'card_text': next_fee_text,
                            }
                        )
                    elif is_wow:
                        print('alerts {}: {}, {}'.format(
                            self.client_id,
                            datetime.datetime.utcnow(),
                            alert_text_key,
                        ))

                        alert_data = {
                            'onSubmit': {
                                'title': u'Внимание',
                                'description': u'Обратный переход на линейку тарифных планов «Мобильный банк» не возможен',
                                'cancelBtn': u'Не менять тариф',
                                'confirmBtn': u'Выбрать новый',
                            }
                        }
                        sbt_data[alert_text_key].update(
                            {
                                'tariffSettingsAlert': alert_data,
                                'findPlanAlert': alert_data,
                                'card_text': 'next_fee_text not ready',
                            }
                        )

                except Exception as err:
                    print('alert text setting error: {}, {}'.format(
                        alert_text_key, err
                    ))
                    print(err)

            sbt_data['icons'] = tariff_mapping_obj.get_content_options_icons_urls(content_options)
        else:
            sbt_data['tariff'] = self._db_last_info and self._db_last_info.name

            if (sbt_connector.api.isCorporate):
                sbt_data['planInfo'] = {
                    "name": "Корпоративный тариф",
                    "changeable": False,
                }

        sbt_data['sms_cost'] = sbt_connector.cl_tariff_costs.get('sms_cost', 1.0)
        sbt_data['minutes_cost'] = sbt_connector.cl_tariff_costs.get('min_cost', 1.5)

        name = self._get_client_name()
        if name:
            sbt_data['name'] = name

        if self.WIFI_PARTNERS:
            sbt_data['wifi_partners'] = self.WIFI_PARTNERS

        sbt_data['suggestWifiCalls'] = is_wifi_available_for_client(self.client)
        sbt_data['hideChangeNumberSection'] = False
        sbt_data['suggestChangeNumber'] = True

        screens = self.get_app_screens(sbt_connector=sbt_connector)
        if screens:
            sbt_data['screens'] = screens

        return sbt_data

    def _tariff_banner(self):
        banner_data = {}

        if self.number not in ['9581234567', ]:
            return banner_data

        sbt_min_mbs = self.client.get_data("optimal_sbt_tariff")
        if not sbt_min_mbs:
            return banner_data

        link = 'sbttelecom://scene/plans/{}:1:1/forcedFindPlan'.format(sbt_min_mbs)
        banner_data['infoBanner'] = {
            "id": 'best_tariff_201907',
            "title": 'Персональный тариф от Сбермобайл',
            "subtitle": 'Узнать подробнее',
            "action": 'deeplink',
            "link": link,
            "dontSaveClosed": True
        }
        return banner_data

    def get_app_screens(self, sbt_connector=None):
        if self.api_version <= '4':
            return None

        screens = []
        if self.client.operator != 'sbt':
            screens = [
                # {"id": "Tariff"},         # главная: Тарифы и аналитика
                # {"id": "Cashback"},       # главная: Кешбэк за покупки
                # {"id": "Services"},       # главная: Услуги и опции
                {"id": "Dashboard"},      # Таббер: Главная
                {"id": "Settings"},       # Таббер: Настройки
                {"id": "EnterSettings"},  # Настройки: Вход в приложение по коду
                {"id": "OrderSIM"},       # Настройки: Заказать сим
                {"id": "FixPay"},         # Настройки: Корректировка платежа
                # {"id": "ApnSettings"},    # Настройки: Настройка интернета
                {"id": "MoveNumber"},     # Настройки: Перенести номер
                {"id": "About"},          # Настройки: О приложении
                # {"id": "DetailedWastes"},
                # {"id": "Topup"},
            ]
        elif sbt_connector.api and sbt_connector.api.isCorporate:
            screens = [
                # {"id": "Tariff"},       # главная: Тарифы и аналитика
                {"id": "Payments"},       # главная: Детализация
                {"id": "Dashboard"},      # Таббер: Главная
                # {"id": "Balance"},      # Таббер: Пополнить баланс
                {"id": "Settings"},       # Таббер: Настройки
                {"id": "EnterSettings"},  # Настройки: Вход в приложение по коду
                {"id": "OrderSIM"},       # Настройки: Заказать сим
                # {"id": "Contacts"},     # Настройки: Контакты
                # {"id": "FixPay"},       # Настройки: Корректировка платежа
                {"id": "ApnSettings"},    # Настройки: Настройка интернета
                {"id": "About"},          # Настройки: О приложении
                {
                    "id": "CorporateSupport",
                    # "settings": {
                    #     "manager": get_region_manager_info(self.client.region),
                    #     "support": get_region_support_info(self.client.region),
                    # },
                },
            ]

            if is_wifi_available_for_client(self.client):
                screens.append({"id": "WiFi"})  # главная: Wi Fi звонки
                screens.append({"id": "Caller"})  # Таббер: Телефон

        else:
            screens = [
                {"id": "Tariff"},         # главная: Тарифы и аналитика
                {"id": "Cashback"},       # главная: Кешбэк за покупки
                {"id": "Payments"},       # главная: Детализация
                {"id": "Services"},       # главная: Услуги и опции
                {"id": "Dashboard"},      # Таббер: Главная
                {"id": "Balance"},        # Таббер: Пополнить баланс
                {"id": "Chat"},           # Таббер: Чат
                {"id": "Settings"},       # Таббер: Настройки
                {"id": "EnterSettings"},  # Настройки: Вход в приложение по коду
                {"id": "OrderSIM"},       # Настройки: Заказать сим
                {"id": "Contacts"},       # Настройки: Контакты
                {"id": "FixPay"},         # Настройки: Корректировка платежа
                {"id": "ApnSettings"},    # Настройки: Настройка интернета
                {"id": "MoveNumber"},     # Настройки: Перенести номер
                {"id": "About"},          # Настройки: О приложении
                {"id": "MyContract"},     # Настройки: Мой контракт
                {"id": "RegistrationData"},  # Настройки: RegistrationData
                {"id": "AddWebPackage"},  # Настройки: 1Гб или 3Гб
                {"id": "About"},          # Настройки: О приложении
                {"id": "DetailedWastes"},
                {"id": "Topup"},
            ]

            if is_wifi_available_for_client(self.client):
                screens.append({"id": "WiFi"})  # главная: Wi Fi звонки
                screens.append({"id": "Caller"})  # Таббер: Телефон
                # screens.append({"id": "ChangeNumber"})  # Настройки: Красивые номера

            # if is_full_sbt_client(self.client) or (
            #          not CHANGE_NUMBER_ENABLED_MSISDNS or
            #          self.client.number in CHANGE_NUMBER_ENABLED_MSISDNS
            # ):
        screens.append({"id": "ChangeNumber"})  # Настройки: Красивые номера
        if self.client.number in [
            '9809421236',
            '9557285780',
            '9800690862',
            '9957078098',
            '9175495498',
            '9809024116',
            '9779987777',
            '9037239797',
        ]:
            screens.append({"id": "Promocode"})
        screens.append({"id": "StandaloneTariffs"})
        return screens

    def _get_client_name(self):
        if self.client_id in TEST_SBT_USERS:
            return TEST_SBT_USERS[self.client_id].get('fio')
        http_log = self.db_session.query(HTTPLog).filter_by(
            client_id=self.client_id
        ).filter(
            HTTPLog.response.like('%fio%')
        ).order_by(HTTPLog.id.desc()).first()

        if http_log:
            fio = re.search(
                "'fio': u'([^\']+)'", http_log.response,
                re.UNICODE
            )
            if fio:
                return fio.group(1).decode('unicode-escape')
            fio = get_subscriber_contract_data(number=self.client_id).get('fio')
            if fio:
                return fio
        return None

    def _app_config_data(self):
        app_config = {
            "roamingInfoEnabled": True
        }
        if (
            self.client.has_sbtelecom_operator and self.device and (
                self.device.os == 'ios' and self.device.app_ver > '1.2' or
                self.device.os == 'android' and self.device.app_ver > '1.3'
            )
        ):
            app_config['chatEnabled'] = True
        return {"appConfig": app_config}


class UserInfoHandlerV3(UserInfoHandler):

    WIFI_PARTNERS = ['domru', ]

    def _get_caller_data(self):
        caller_registration(self.client, self.db_session)

        caller_data = {}

        if self.device.os == 'web':
            return caller_data

        if (
                self.client.get_data('caller_login_s') is not None and
                self.client.get_data('caller_password_s') is not None
        ):
            caller_data['caller_login'] = self.client.get_data('caller_login_s')
            caller_data['caller_password'] = self.client.get_data('caller_password_s')

        if is_wifi_available_for_client(self.client):
            sbt_huawei_pass = self.db_session.query(SbtHuaweiPassword).filter(
                SbtHuaweiPassword.client_id == self.client.number,
                SbtHuaweiPassword.deleted == None
            ).order_by(SbtHuaweiPassword.id.desc()).first()

            if sbt_huawei_pass:
                caller_data['caller_login_h'] = self.client.get_data('caller_login_h')
                caller_data['caller_password_h'] = sbt_huawei_pass.password
            elif (
                    self.client.get_data('caller_login_h') is not None and
                    self.client.get_data('caller_password_h') is not None
            ):
                caller_data['caller_login_h'] = self.client.get_data('caller_login_h')
                caller_data['caller_password_h'] = self.client.get_data('caller_password_h')

        return caller_data


class CashbackInfoHandler(ABSHandler):

    @client_token_required()
    def _post(self):
        number = self.data.get('number')
        if not number or len(number) != 10:
            raise ApiError(error_text='wrong client number')
        client = db_session.query(Client_lk).order_by(Client_lk.id.desc()).filter(
            Client_lk.client_id == number
        ).first()
        if client:
            connector = create_connector(client)
            connector.login_client(
                client, db_session=db_session,
                autologin=True,
            )
            t = connector._get_current_tariff(need_obj=True)
            return {
                'cashback': t and t.fee_cashback
            }
        return {
            'cashback': None
        }


class CallerPasswordChangedHandler(ABSHandler):

    @client_token_required()
    def _post(self, *args, **kwargs):
        get_alarm_bot().debug('CallerPasswordChangedHandler: {}'.format(self.data))
        device = self.db_session.query(DeviceData).filter(DeviceData.token == self.client_token.token).first()
        change_pass_logs = self.db_session.query(ChangeWifiPasswordLog).filter(
            ChangeWifiPasswordLog.client_id == self.client.number,
            ChangeWifiPasswordLog.device_id == device.id,
            ChangeWifiPasswordLog.confirmed == None,
        ).all()

        if change_pass_logs:
            for pass_log in change_pass_logs:
                pass_log.confirmed = datetime.datetime.utcnow()
                pass_log.save(self.db_session, commit=True)
            self.db_session.commit()
            get_alarm_bot().debug('CallerPasswordChangedHandler: accepted {}, passes found {}'.format(self.data, len(change_pass_logs)))
            return {}
        get_alarm_bot().debug('CallerPasswordChangedHandler: {} pass to confirm not found'.format(self.data))
        return {'error': 'password not find'}


class CallerChangePasswordHandler(ABSHandler):

    @client_token_required()
    def _post(self, *args, **kwargs):
        get_alarm_bot().debug('CallerChangePasswordHandler: {}'.format(self.data))
        if is_wifi_available_for_client(self.client):
            device = self.db_session.query(DeviceData).filter(DeviceData.token == self.client_token.token).first()
            msisdn_data = change_huawei_password(client=self.client, device=device)
            get_alarm_bot().debug(
                'CallerChangePasswordHandler:  client {} success changed pass: {}'.format(self.client.number, msisdn_data)
            )
            return {
                'password': msisdn_data['password'],
                'login': self.client.number
            }
        else:
            get_alarm_bot().debug(
                'CallerChangePasswordHandler:  wifi calls is unavailable for client {}'.format(self.client.number)
            )
            return {'error': 'wifi calls is unavailable for client'}


class TestPushHandler(ABSHandler):

    @client_token_required()
    def _post(self, *args, **kwargs):
        if not self.client_token:
            return {'result': 0, 'reason': 'token not found'}
        device = self.db_session.query(DeviceData).filter(DeviceData.token == self.client_token.token).first()
        if not device:
            return {'result': 0, 'reason': 'device not found'}
        data = self.data['push_data'] or {}
        push_id = str(uuid.uuid4()).replace('-', '')
        data.update({
            "push_id": push_id,
            "test": True,
        })

        try:
            response = send_voip_push(
                device, data=data, db_session=self.db_session
            )
            response["push_id"] = push_id
            response['last_push_sent'] = self.client.last_push_sent.strftime('%Y-%m-%dT%H:%M:%S')
            self.client.last_push_sent = datetime.datetime.utcnow()
            self.db_session.add(self.client)
            self.db_session.commit()
        except Exception as e:
            text = '{}\n{}'.format(e, traceback.format_exc())
            print('send test push error: {}'.format(text))
            return {'result': 0, 'reason': text}

        return response
